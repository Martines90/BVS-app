{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccountAlreadyAppliedForElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountAlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountCantVoteOnItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccountRanOutOfVotingCreditsForThisVotingCycle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdminRoleGrantApprovalAlreadySent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyVotedOnThisVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArticleNotExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ArticleNotRelatedToYourVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantStartNewVointg10daysOrLessBeforeEndOfCycle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CitizenRoleAlreadyGranted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CitizenRoleAlreadyRevokedOrNotGranted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContentCheckIpfsNotAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionStartDateHasToBe30DaysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsAlreadyClosedOrNotYetScheduled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsAlreadyFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsCanOnlyClose7DaysAfterTheirEndDate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ElectionsNotScheduledOrAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FirstVotingCycleStartDateHasToBeInTheFuture",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinimumApplicationFeeNotCovered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewVotingHasToBeScheduled10DaysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewVotingHasToBeScheduledLessThan30daysAhead",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleContentCheckIpfsAssignedToThisArticle",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleResponseAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoArticleResponseContentCheckIpfsAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoEnoughContentReadQuizAnswerAdded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoEnoughVotesReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoMorePublishArticleCreditsRelatedToThisVoting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOngoingVotingPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAppliedForCitizenRole",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "PermissionsUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RunOutOfDailyCitizenRoleGrantCredit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThereIsAnOngoingElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThereIsNoOngoingElections",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VoteOnAccountNotBelongToAnyCandidate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingCanBeApproved3DaysOrLessBeforeItsStart",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingContentCheckQuizNotAssigned",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingContentCheckQuizNotCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingDidNotWon",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotBelongsToSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingNotYetStartedOrAlreadyFinished",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VotingOwnerNotRespondedOnAllArticles",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "CitizenshipRoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executer",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMINISTRATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CITIZEN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ELECTION_START_END_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_PERCENTAGE_OF_ELECTION_VOTES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PERCENTAGE_OF_VOTES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_TOTAL_CONTENT_READ_CHECK_ANSWER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTE_SCORE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLITICAL_ACTOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_CHECK_ASKED_NUM_OF_QUESTIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_CYCLE_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToArticle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToArticleResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_keccak256HashedAnswers",
          "type": "bytes32[]"
        }
      ],
      "name": "addKeccak256HashedAnswersToVotingContent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "adminApprovalSentToAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adminRoleGrantApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_emailPublicKeyCombinedHash",
          "type": "bytes32"
        }
      ],
      "name": "applyForCitizenshipRole",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "applyForElections",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "approveVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleContentReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleContentResponseReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articleKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articlesCompleted",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "articlesResponseCompleted",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_quizIpfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "assignToArticleContent",
          "type": "bool"
        }
      ],
      "name": "assignQuizIpfsHashToArticleOrResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_quizIpfsHash",
          "type": "string"
        }
      ],
      "name": "assignQuizIpfsHashToVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "calculateVoteScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_role",
          "type": "bytes32"
        }
      ],
      "name": "checkIfAccounthasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "citizenRoleApplicationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "citizens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "citizenshipApplications",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "contentType",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string[]",
          "name": "_answers",
          "type": "string[]"
        }
      ],
      "name": "completeContentReadQuiz",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dailyCitizenRoleModifyCredit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "electionCandidateScores",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "electionCandidates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "electionVoters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "electionVotes",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsCandidateApplicationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsEndDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionsStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "firstVotingCycleStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountArticleQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_articleKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountArticleResponseQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAccountVotingQuizAnswerIndexes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdminsSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getArticleKeysLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCitizensSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionCandidatesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getElectionVotersSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoliticalActorsSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotinCycleIndexesSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "getVoting",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "cancelled",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "budget",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "contentIpfsHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteOnAScore",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voteOnBScore",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "votingContentCheckQuizIpfsHash",
              "type": "string"
            }
          ],
          "internalType": "struct BVS_Voting.Voting",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingKeysLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_emailPublicKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_revokeCitizenRole",
          "type": "bool"
        }
      ],
      "name": "grantCitizenRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_answerIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_readCheckAnswers",
          "type": "bytes32[]"
        },
        {
          "internalType": "string[]",
          "name": "_answers",
          "type": "string[]"
        }
      ],
      "name": "isContentReadQuizCorrect",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_string",
          "type": "string"
        }
      ],
      "name": "isEmptyString",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_isAWinExpected",
          "type": "bool"
        }
      ],
      "name": "isVotingWon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "politicalActorVotingCredits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "politicalActors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proConArticles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isArticleApproved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isResponseApproved",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "articleIpfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVoteOnA",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "responseStatementIpfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "articleContentCheckQuizIpfsHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "responseContentCheckQuizIpfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "publishArticleToVotingsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isVoteOnA",
          "type": "bool"
        }
      ],
      "name": "publishProConArticle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_proConArticleKey",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "publishProConArticleResponse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "revokedAccount",
          "type": "address"
        }
      ],
      "name": "revokeAdminRoleApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_contentIpfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_budget",
          "type": "uint256"
        }
      ],
      "name": "scheduleNewVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_electionsStartDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_electionsEndDate",
          "type": "uint256"
        }
      ],
      "name": "scheduleNextElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "sendGrantAdministratorRoleApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_firstVotingCycleStartDate",
          "type": "uint256"
        }
      ],
      "name": "setFirstVotingCycleStartDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        }
      ],
      "name": "unlockVotingBudget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateCitizenshipRoleApplicationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voteOnAddress",
          "type": "address"
        }
      ],
      "name": "voteOnElections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_votingKey",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_voteOnA",
          "type": "bool"
        }
      ],
      "name": "voteOnVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isContentCompleted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingContentReadCheckAnswers",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingCycleIndexes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votingCycleStartVoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingKeys",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contentIpfsHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteOnAScore",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voteOnBScore",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "votingContentCheckQuizIpfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2fa6b9058ba1892a70c6638f0da7384a4d22f211bb76ca6c1f26fe0303818dc3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "5217040",
    "logsBloom": "0x
    "blockHash": "0xb2279339afee5d898909be9bd27057f9224ee6d057ef94e310dc63e386430819",
    "transactionHash": "0x2fa6b9058ba1892a70c6638f0da7384a4d22f211bb76ca6c1f26fe0303818dc3",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x2fa6b9058ba1892a70c6638f0da7384a4d22f211bb76ca6c1f26fe0303818dc3",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
        ],
        "data": "0xb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b4661000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 0,
        "blockHash": "0xb2279339afee5d898909be9bd27057f9224ee6d057ef94e310dc63e386430819"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x2fa6b9058ba1892a70c6638f0da7384a4d22f211bb76ca6c1f26fe0303818dc3",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
        ],
        "data": "0x313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
        "logIndex": 1,
        "blockHash": "0xb2279339afee5d898909be9bd27057f9224ee6d057ef94e310dc63e386430819"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "5217040",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "15e8a1d017ba91fe81a2fe13dce6e0a9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountAlreadyAppliedForElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountAlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountCantVoteOnItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccountRanOutOfVotingCreditsForThisVotingCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminRoleGrantApprovalAlreadySent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVotedOnThisVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArticleNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArticleNotRelatedToYourVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantStartNewVointg10daysOrLessBeforeEndOfCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CitizenRoleAlreadyGranted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CitizenRoleAlreadyRevokedOrNotGranted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContentCheckIpfsNotAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionStartDateHasToBe30DaysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsAlreadyClosedOrNotYetScheduled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsAlreadyFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsCanOnlyClose7DaysAfterTheirEndDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ElectionsNotScheduledOrAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FirstVotingCycleStartDateHasToBeInTheFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumApplicationFeeNotCovered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewVotingHasToBeScheduled10DaysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewVotingHasToBeScheduledLessThan30daysAhead\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleContentCheckIpfsAssignedToThisArticle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleResponseAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoArticleResponseContentCheckIpfsAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnoughContentReadQuizAnswerAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnoughVotesReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoMorePublishArticleCreditsRelatedToThisVoting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingVotingPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAppliedForCitizenRole\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"PermissionsUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RunOutOfDailyCitizenRoleGrantCredit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThereIsAnOngoingElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThereIsNoOngoingElections\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VoteOnAccountNotBelongToAnyCandidate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingCanBeApproved3DaysOrLessBeforeItsStart\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingContentCheckQuizNotAssigned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingContentCheckQuizNotCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingDidNotWon\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotBelongsToSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingNotYetStartedOrAlreadyFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingOwnerNotRespondedOnAllArticles\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"CitizenshipRoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMINISTRATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CITIZEN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ELECTION_START_END_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_PERCENTAGE_OF_ELECTION_VOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PERCENTAGE_OF_VOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TOTAL_CONTENT_READ_CHECK_ANSWER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTE_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLITICAL_ACTOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_CHECK_ASKED_NUM_OF_QUESTIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_CYCLE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToArticleResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_keccak256HashedAnswers\",\"type\":\"bytes32[]\"}],\"name\":\"addKeccak256HashedAnswersToVotingContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adminApprovalSentToAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminRoleGrantApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_emailPublicKeyCombinedHash\",\"type\":\"bytes32\"}],\"name\":\"applyForCitizenshipRole\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyForElections\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"approveVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContentReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleContentResponseReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articleKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articlesCompleted\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"articlesResponseCompleted\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_quizIpfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"assignToArticleContent\",\"type\":\"bool\"}],\"name\":\"assignQuizIpfsHashToArticleOrResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_quizIpfsHash\",\"type\":\"string\"}],\"name\":\"assignQuizIpfsHashToVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"calculateVoteScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_role\",\"type\":\"bytes32\"}],\"name\":\"checkIfAccounthasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"citizenRoleApplicationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citizens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"citizenshipApplications\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string[]\",\"name\":\"_answers\",\"type\":\"string[]\"}],\"name\":\"completeContentReadQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyCitizenRoleModifyCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"electionCandidateScores\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"electionCandidates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"electionVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"electionVotes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsCandidateApplicationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsEndDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionsStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstVotingCycleStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountArticleQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_articleKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountArticleResponseQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccountVotingQuizAnswerIndexes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminsSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArticleKeysLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCitizensSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectionCandidatesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectionVotersSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoliticalActorsSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotinCycleIndexesSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"getVoting\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnAScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnBScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"votingContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"internalType\":\"struct BVS_Voting.Voting\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingKeysLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_emailPublicKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_revokeCitizenRole\",\"type\":\"bool\"}],\"name\":\"grantCitizenRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_answerIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_readCheckAnswers\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"_answers\",\"type\":\"string[]\"}],\"name\":\"isContentReadQuizCorrect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_string\",\"type\":\"string\"}],\"name\":\"isEmptyString\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_isAWinExpected\",\"type\":\"bool\"}],\"name\":\"isVotingWon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"politicalActorVotingCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"politicalActors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proConArticles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isArticleApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isResponseApproved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"articleIpfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVoteOnA\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"responseStatementIpfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"articleContentCheckQuizIpfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"responseContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"publishArticleToVotingsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isVoteOnA\",\"type\":\"bool\"}],\"name\":\"publishProConArticle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_proConArticleKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"publishProConArticleResponse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revokedAccount\",\"type\":\"address\"}],\"name\":\"revokeAdminRoleApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_budget\",\"type\":\"uint256\"}],\"name\":\"scheduleNewVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_electionsStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_electionsEndDate\",\"type\":\"uint256\"}],\"name\":\"scheduleNextElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sendGrantAdministratorRoleApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstVotingCycleStartDate\",\"type\":\"uint256\"}],\"name\":\"setFirstVotingCycleStartDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"}],\"name\":\"unlockVotingBudget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateCitizenshipRoleApplicationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voteOnAddress\",\"type\":\"address\"}],\"name\":\"voteOnElections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_votingKey\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_voteOnA\",\"type\":\"bool\"}],\"name\":\"voteOnVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isContentCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingContentReadCheckAnswers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingCycleIndexes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingCycleStartVoteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contentIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnAScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteOnBScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"votingContentCheckQuizIpfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Balanced Voting System: Voting contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BVS_Voting.sol\":\"BVS_Voting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/BVS_Roles.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title Balanced Voting System:Roles - contract\\n * @author M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\\n * @notice\\n * @dev\\n */\\n\\ncontract BVS_Roles {\\n    uint public constant MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED = 50;\\n    uint public constant MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE = 10;\\n\\n    bytes32 public constant ADMINISTRATOR = keccak256(\\\"ADMINISTRATOR\\\");\\n    bytes32 public constant POLITICAL_ACTOR = keccak256(\\\"POLITICAL_ACTOR\\\");\\n    bytes32 public constant CITIZEN = keccak256(\\\"CITIZEN\\\");\\n\\n    uint public citizenRoleApplicationFee = 10000;\\n\\n    address[] public admins;\\n    address[] public politicalActors;\\n    mapping(address => uint) public politicalActorVotingCredits;\\n    address[] public citizens;\\n\\n    uint public immutable creationDate;\\n\\n    mapping(address => address[]) public adminApprovalSentToAccount;\\n    mapping(address => uint) public adminRoleGrantApprovals;\\n\\n    mapping(address => mapping(uint => uint))\\n        public dailyCitizenRoleModifyCredit;\\n\\n    mapping(address => bytes32) public citizenshipApplications;\\n\\n    mapping(bytes32 => mapping(address => bool)) private _hasRole;\\n\\n    // Events\\n\\n    event RoleGranted(bytes32 role, address account, address executer);\\n\\n    event RoleRevoked(bytes32 role, address account, address executer);\\n\\n    // Errors\\n    error CitizenRoleAlreadyGranted();\\n    error CitizenRoleAlreadyRevokedOrNotGranted();\\n    error NotAppliedForCitizenRole();\\n    error RunOutOfDailyCitizenRoleGrantCredit();\\n    error AdminRoleGrantApprovalAlreadySent();\\n\\n    error MinimumApplicationFeeNotCovered();\\n\\n    error PermissionsUnauthorizedAccount(address account, bytes32 role);\\n\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, msg.sender);\\n        _;\\n    }\\n\\n    modifier minCitizenshipApplicationFeeCovered() {\\n        if (msg.value < citizenRoleApplicationFee) {\\n            revert MinimumApplicationFeeNotCovered();\\n        }\\n        _;\\n    }\\n\\n    modifier appliedForCitizenRole(address _account, bytes32 _emailPublicKeyHash, bool _revokeCitizenRole) {\\n        if (citizenshipApplications[_account] != _emailPublicKeyHash && !_revokeCitizenRole) {\\n            revert NotAppliedForCitizenRole();\\n        }\\n        _;\\n    }\\n\\n    modifier hasRoleToModify(address _account, bool isRevoke) {\\n        if (!isRevoke && hasRole(CITIZEN, _account))\\n            revert CitizenRoleAlreadyGranted();\\n        if (isRevoke && !hasRole(CITIZEN, _account))\\n            revert CitizenRoleAlreadyRevokedOrNotGranted();\\n        _;\\n    }\\n\\n    modifier hasCitizenRoleGrantCredit() {\\n        uint daysPassed = (block.timestamp - creationDate) / 60 / 60 / 24;\\n\\n        uint maxCitizensCanBeAddPerAdmin = (citizens.length /\\n            MAX_DAILY_NEW_CITIZENS_CAN_ADD_PERCENTAGE) / admins.length;\\n        maxCitizensCanBeAddPerAdmin = maxCitizensCanBeAddPerAdmin > 0\\n            ? maxCitizensCanBeAddPerAdmin\\n            : 1;\\n\\n        if (\\n            dailyCitizenRoleModifyCredit[msg.sender][daysPassed] >=\\n            maxCitizensCanBeAddPerAdmin\\n        ) revert RunOutOfDailyCitizenRoleGrantCredit();\\n        _;\\n    }\\n\\n    modifier adminRoleGrantApprovalNotSent(address _account) {\\n        bool adminRoleGrantApprovalAlreadySent = false;\\n        for (\\n            uint i = 0;\\n            i < adminApprovalSentToAccount[msg.sender].length;\\n            i++\\n        ) {\\n            if (adminApprovalSentToAccount[msg.sender][i] == _account) {\\n                adminRoleGrantApprovalAlreadySent = true;\\n            }\\n        }\\n\\n        if (adminRoleGrantApprovalAlreadySent)\\n            revert AdminRoleGrantApprovalAlreadySent();\\n        _;\\n    }\\n\\n    constructor() {\\n        admins.push(msg.sender);\\n        adminRoleGrantApprovals[msg.sender] = 1;\\n        citizens.push(msg.sender);\\n        creationDate = block.timestamp;\\n        _setupRole(ADMINISTRATOR, msg.sender);\\n        _setupRole(CITIZEN, msg.sender);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _hasRole[role][account] = true;\\n        emit RoleGranted(role, account, msg.sender);\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        _checkRole(role, account);\\n        delete _hasRole[role][account];\\n        emit RoleRevoked(role, account, msg.sender);\\n    }\\n\\n    /// @dev Checks `role` for `account`. Reverts with a message including the required role.\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!_hasRole[role][account]) {\\n            revert PermissionsUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _hasRole[role][account];\\n    }\\n\\n    function applyForCitizenshipRole(\\n        bytes32 _emailPublicKeyCombinedHash\\n    ) public payable minCitizenshipApplicationFeeCovered {\\n        citizenshipApplications[msg.sender] = _emailPublicKeyCombinedHash;\\n    }\\n\\n    function sendGrantAdministratorRoleApproval(\\n        address _account\\n    ) public onlyRole(ADMINISTRATOR) adminRoleGrantApprovalNotSent(_account) {\\n        adminApprovalSentToAccount[msg.sender].push(_account);\\n        adminRoleGrantApprovals[_account]++;\\n\\n        if (\\n            admins.length == 0 ||\\n            (adminRoleGrantApprovals[_account] * 1000) / admins.length >\\n            MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED * 10\\n        ) {\\n            adminRoleGrantApprovals[_account]++;\\n            // also new admin has to automatically send his approvals to the already existing admins\\n            for (uint i = 0; i < admins.length; i++) {\\n                adminApprovalSentToAccount[_account].push(admins[i]);\\n                adminRoleGrantApprovals[admins[i]]++;\\n            }\\n            _setupRole(ADMINISTRATOR, _account);\\n            admins.push(_account);\\n        }\\n    }\\n\\n    function revokeAdminRoleApproval(\\n        address revokedAccount\\n    ) public onlyRole(ADMINISTRATOR) {\\n        _revokeAdminRoleApproval(msg.sender, revokedAccount);\\n    }\\n\\n    function _revokeAdminRoleApproval(\\n        address admin,\\n        address revokedAccount\\n    ) internal {\\n        for (uint i = 0; i < adminApprovalSentToAccount[admin].length; i++) {\\n            if (adminApprovalSentToAccount[admin][i] == revokedAccount) {\\n                delete adminApprovalSentToAccount[admin][i];\\n                adminRoleGrantApprovals[revokedAccount]--;\\n                if (\\n                    (adminRoleGrantApprovals[revokedAccount] * 1000) /\\n                        admins.length <\\n                    MIN_PERCENTAGE_GRANT_ADMIN_APPROVALS_REQUIRED * 10\\n                ) {\\n                    adminRoleGrantApprovals[revokedAccount]--;\\n                    _revokeRole(ADMINISTRATOR, revokedAccount);\\n                    for (uint u = 0; u < admins.length; u++) {\\n                        if (admins[u] == revokedAccount) {\\n                            delete admins[u];\\n                            admins[u] = admins[admins.length - 1];\\n                            admins.pop();\\n                            break;\\n                        }\\n                    }\\n                    // make sure all the other admins get revoked their approval receieved from this admin\\n                    for (\\n                        uint k = 0;\\n                        k < adminApprovalSentToAccount[revokedAccount].length;\\n                        k++\\n                    ) {\\n                        _revokeAdminRoleApproval(\\n                            revokedAccount,\\n                            adminApprovalSentToAccount[revokedAccount][k]\\n                        );\\n                        delete adminApprovalSentToAccount[revokedAccount][k];\\n                    }\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function grantCitizenRole(\\n        address _account,\\n        bytes32 _emailPublicKeyHash,\\n        bool _revokeCitizenRole\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        hasRoleToModify(_account, _revokeCitizenRole)\\n        hasCitizenRoleGrantCredit\\n        appliedForCitizenRole(_account, _emailPublicKeyHash, _revokeCitizenRole)\\n    {\\n        uint daysPassed = (block.timestamp - creationDate) / 60 / 60 / 24;\\n        dailyCitizenRoleModifyCredit[msg.sender][daysPassed]++;\\n        if (!_revokeCitizenRole) {\\n            _setupRole(CITIZEN, _account);\\n            citizens.push(_account);\\n            delete citizenshipApplications[_account];\\n        } else {\\n            if (hasRole(CITIZEN, _account)) {\\n                _revokeRole(CITIZEN, _account);\\n            }\\n            delete citizenshipApplications[_account];\\n            for (uint i; i < citizens.length; i++) {\\n                if (citizens[i] == _account) {\\n                    delete citizens[i];\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    function updateCitizenshipRoleApplicationFee(\\n        uint value\\n    ) public onlyRole(ADMINISTRATOR) {\\n        citizenRoleApplicationFee = value;\\n    }\\n\\n    function checkIfAccounthasRole(\\n        address _account,\\n        bytes32 _role\\n    ) public view returns (bool) {\\n        return hasRole(_role, _account);\\n    }\\n\\n    function getAdminsSize() public view returns (uint) {\\n        return admins.length;\\n    }\\n\\n    function getCitizensSize() public view returns (uint) {\\n        return citizens.length;\\n    }\\n\\n    function getPoliticalActorsSize() public view returns (uint) {\\n        return politicalActors.length;\\n    }\\n\\n    function isEmptyString(string memory _string) public pure returns (bool) {\\n        return keccak256(bytes(_string)) == keccak256(bytes(\\\"\\\"));\\n    }\\n}\\n\",\"keccak256\":\"0x4a7098ae2d69cc7715ba7c7ed1dc23829ffe7d25d2ee20fa58e9a7a1cb6b2148\",\"license\":\"MIT\"},\"contracts/BVS_Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma\\npragma solidity ^0.8.9;\\n\\nimport \\\"./BVS_Roles.sol\\\";\\n\\n/**\\n * @title Balanced Voting System: Voting contract\\n * @author M\\u00e1rton S\\u00e1ndor Horv\\u00e1th, email: hmartonsandor{@}gmail.com\\n * @notice\\n * @dev\\n */\\n\\ncontract BVS_Voting is BVS_Roles {\\n    // CONSTANTS\\n    uint public constant ELECTION_START_END_INTERVAL = 30 days;\\n    uint public constant MINIMUM_PERCENTAGE_OF_ELECTION_VOTES = 10;\\n\\n    uint public constant VOTING_CYCLE_INTERVAL = 30 days;\\n    uint public constant VOTING_DURATION = 14 days;\\n    uint public constant APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT = 3 days;\\n    uint public constant NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME = 10 days;\\n\\n    uint public constant MIN_TOTAL_CONTENT_READ_CHECK_ANSWER = 10;\\n    uint public constant VOTING_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n    uint public constant ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n    uint public constant ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS = 5;\\n\\n    uint public constant MIN_VOTE_SCORE = 5;\\n    uint public constant MIN_PERCENTAGE_OF_VOTES = 10;\\n\\n    // globals\\n\\n    uint public firstVotingCycleStartDate;\\n    uint public electionsCandidateApplicationFee = 10000000;\\n\\n    uint public electionsStartDate;\\n    uint public electionsEndDate;\\n\\n    // DATA OBJECTS\\n\\n    struct ProConArticle {\\n        bytes32 votingKey;\\n        bool isArticleApproved; // admin approves\\n        bool isResponseApproved; // admin approves\\n        address publisher;\\n        string articleIpfsHash;\\n        bool isVoteOnA;\\n        string responseStatementIpfsHash; // addeed by the creator of the related voting\\n        string articleContentCheckQuizIpfsHash; // added by admin\\n        string responseContentCheckQuizIpfsHash; // added by admin\\n    }\\n\\n    struct Voting {\\n        bool approved;\\n        bool cancelled;\\n        bytes32 key;\\n        uint budget;\\n        uint voteCount;\\n        address creator;\\n        string contentIpfsHash;\\n        uint startDate; // 10 days before start date critics can appear\\n        uint voteOnAScore;\\n        uint voteOnBScore;\\n        string votingContentCheckQuizIpfsHash;\\n    }\\n\\n    struct Vote {\\n        bool voted;\\n        bool isContentCompleted;\\n    }\\n\\n    // mapping(address => uint) public funders;\\n\\n    // article content check answers\\n    mapping(bytes32 => bytes32[]) public articleContentReadCheckAnswers; // article key => answers\\n\\n    mapping(bytes32 => bytes32[]) public articleContentResponseReadCheckAnswers; // article key => answers\\n\\n    mapping(bytes32 => bytes32[]) public votingContentReadCheckAnswers; // voting key => answers\\n\\n    // track the number of votes political actors created during voting cycles\\n    mapping(uint => mapping(address => uint)) public votingCycleStartVoteCount;\\n\\n    // track the number of articles published related to scheduled votings\\n    mapping(address => mapping(bytes32 => uint)) // political_actor =>  voting key => published articles count\\n        public publishArticleToVotingsCount;\\n\\n    // register the voting cycle indexes in order to clear votingCycleStartVoteCount data\\n    uint[] public votingCycleIndexes;\\n\\n    // store votings\\n    mapping(bytes32 => Voting) public votings;\\n\\n    // store pro/con articles\\n    mapping(bytes32 => mapping(bytes32 => ProConArticle)) public proConArticles; // voting key => article key => article\\n\\n    // register voting and article keys\\n    bytes32[] public votingKeys;\\n    bytes32[] public articleKeys;\\n\\n    mapping(address => mapping(bytes32 => Vote)) public votes;\\n\\n    mapping(address => bytes32[]) public articlesCompleted;\\n    mapping(address => bytes32[]) public articlesResponseCompleted;\\n\\n    // elections\\n\\n    address[] public electionCandidates;\\n    mapping(address => uint32) public electionCandidateScores;\\n\\n    mapping(address => address) public electionVotes;\\n    address[] public electionVoters;\\n\\n    // EVENTS\\n    event CitizenshipRoleGranted(address to, address from);\\n\\n    // ERRORS **************************************************************\\n\\n    error VotingAlreadyStarted();\\n    error VotingCanBeApproved3DaysOrLessBeforeItsStart();\\n\\n    error CantStartNewVointg10daysOrLessBeforeEndOfCycle();\\n    error AccountRanOutOfVotingCreditsForThisVotingCycle();\\n\\n    error ArticleNotExists();\\n    error ArticleNotRelatedToYourVoting();\\n    error ContentCheckIpfsNotAssigned();\\n    error NoArticleContentCheckIpfsAssignedToThisArticle();\\n\\n    error NoArticleResponseAssigned();\\n    error NoArticleResponseContentCheckIpfsAssigned();\\n    error NoMorePublishArticleCreditsRelatedToThisVoting();\\n\\n    error NoEnoughContentReadQuizAnswerAdded();\\n\\n    error FirstVotingCycleStartDateHasToBeInTheFuture();\\n    error NoOngoingVotingPeriod();\\n    error NewVotingHasToBeScheduled10DaysAhead();\\n    error NewVotingHasToBeScheduledLessThan30daysAhead();\\n\\n    error VotingNotExists();\\n    error VotingNotYetStartedOrAlreadyFinished();\\n    error VotingNotBelongsToSender();\\n    error VotingDidNotWon();\\n    error VotingNotFinished();\\n    error VotingNotApproved();\\n    error VotingContentCheckQuizNotCompleted();\\n    error AlreadyVotedOnThisVoting();\\n    error NoEnoughVotesReceived();\\n    error VotingContentCheckQuizNotAssigned();\\n    error VotingOwnerNotRespondedOnAllArticles();\\n\\n    // elections\\n    error ThereIsAnOngoingElections();\\n    error ThereIsNoOngoingElections();\\n    error ElectionStartDateHasToBe30DaysAhead();\\n\\n    error ElectionsNotScheduledOrAlreadyStarted();\\n    error AccountAlreadyAppliedForElections();\\n    error ElectionsAlreadyFinished();\\n    error AccountCantVoteOnItself();\\n    error VoteOnAccountNotBelongToAnyCandidate();\\n    error AccountAlreadyVoted();\\n\\n    error ElectionsAlreadyClosedOrNotYetScheduled();\\n    error ElectionsCanOnlyClose7DaysAfterTheirEndDate();\\n\\n    modifier criticisedArticleRelatedToYourVoting(\\n        bytes32 _votingKey,\\n        bytes32 _proConArticleKey\\n    ) {\\n        if (\\n            votings[proConArticles[_votingKey][_proConArticleKey].votingKey]\\n                .creator != msg.sender\\n        ) revert ArticleNotRelatedToYourVoting();\\n        _;\\n    }\\n\\n    modifier hasContentIpfs(bytes32 _votingKey, bytes32 _articleKey) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash\\n            )\\n        ) revert ContentCheckIpfsNotAssigned();\\n        _;\\n    }\\n\\n    modifier firstVotingCycleStartDateIsInTheFuture(\\n        uint _firstVotingCycleStartDate\\n    ) {\\n        if (_firstVotingCycleStartDate < block.timestamp) {\\n            revert FirstVotingCycleStartDateHasToBeInTheFuture();\\n        }\\n        _;\\n    }\\n\\n    modifier votingNotYetStarted(bytes32 _votingKey) {\\n        if (votings[_votingKey].startDate < block.timestamp) {\\n            revert VotingAlreadyStarted();\\n        }\\n        _;\\n    }\\n\\n    modifier votingWon(bytes32 _votingKey) {\\n        if (!isVotingWon(_votingKey, true)) {\\n            revert VotingDidNotWon();\\n        }\\n        _;\\n    }\\n\\n    modifier votingBelongsToSender(bytes32 _votingKey) {\\n        if (getVoting(_votingKey).creator != msg.sender) {\\n            revert VotingNotBelongsToSender();\\n        }\\n        _;\\n    }\\n\\n    modifier votingNotFinished(bytes32 _votingKey) {\\n        if (votings[_votingKey].startDate + VOTING_DURATION > block.timestamp) {\\n            revert VotingNotFinished();\\n        }\\n        _;\\n    }\\n\\n    modifier votingApproved(bytes32 _votingKey) {\\n        if (!votings[_votingKey].approved) {\\n            revert VotingNotApproved();\\n        }\\n        _;\\n    }\\n\\n    modifier enoughVotesArrived(bytes32 _votingKey) {\\n        if (\\n            (votings[_votingKey].voteCount * 100) / citizens.length <\\n            MIN_PERCENTAGE_OF_VOTES\\n        ) {\\n            revert NoEnoughVotesReceived();\\n        }\\n        _;\\n    }\\n\\n    modifier votingExists(bytes32 _votingKey) {\\n        if (votings[_votingKey].creator == address(0)) {\\n            revert VotingNotExists();\\n        }\\n        _;\\n    }\\n\\n    modifier votingPeriodIsActive() {\\n        if (\\n            firstVotingCycleStartDate > block.timestamp ||\\n            firstVotingCycleStartDate == 0\\n        ) {\\n            revert NoOngoingVotingPeriod();\\n        }\\n        _;\\n    }\\n\\n    modifier votingIsOngoing(bytes32 _votingKey) {\\n        if (\\n            votings[_votingKey].startDate > block.timestamp ||\\n            votings[_votingKey].startDate + VOTING_DURATION < block.timestamp\\n        ) {\\n            revert VotingNotYetStartedOrAlreadyFinished();\\n        }\\n        _;\\n    }\\n\\n    modifier contentCheckQuizCompleted(bytes32 _votingKey) {\\n        if (!votes[msg.sender][_votingKey].isContentCompleted) {\\n            revert VotingContentCheckQuizNotCompleted();\\n        }\\n        _;\\n    }\\n\\n    modifier notVotedYetOnThisVoting(bytes32 _votingKey) {\\n        if (votes[msg.sender][_votingKey].voted) {\\n            revert AlreadyVotedOnThisVoting();\\n        }\\n        _;\\n    }\\n\\n    modifier newVotingScheduledAtLeast10daysAhead(uint _startDate) {\\n        if (\\n            _startDate <\\n            block.timestamp + NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\\n        ) {\\n            revert NewVotingHasToBeScheduled10DaysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier newVotingScheduledMaximum30daysAhead(uint _startDate) {\\n        if (_startDate > block.timestamp + VOTING_CYCLE_INTERVAL) {\\n            revert NewVotingHasToBeScheduledLessThan30daysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier votingContentQuizIpfsAssigned(bytes32 _votingKey) {\\n        if (isEmptyString(votings[_votingKey].votingContentCheckQuizIpfsHash)) {\\n            revert VotingContentCheckQuizNotAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier creatorOfVotingRespondedOnArticles(bytes32 _votingKey) {\\n        bool isRespondedAllTheCritics = true;\\n        uint articleKeysLength = articleKeys.length;\\n\\n        for (uint i = 0; i < articleKeysLength; i++) {\\n            if (proConArticles[_votingKey][articleKeys[i]].isArticleApproved) {\\n                if (\\n                    !proConArticles[_votingKey][articleKeys[i]]\\n                        .isResponseApproved\\n                ) {\\n                    isRespondedAllTheCritics = false;\\n                    break;\\n                }\\n            }\\n        }\\n        if (!isRespondedAllTheCritics) {\\n            revert VotingOwnerNotRespondedOnAllArticles();\\n        }\\n        _;\\n    }\\n\\n    modifier approveAttempt3DaysBeforeVotingStarts(bytes32 _votingKey) {\\n        if (\\n            votings[_votingKey].startDate -\\n                APPROVE_VOTING_BEFORE_IT_STARTS_LIMIT >\\n            block.timestamp\\n        ) {\\n            revert VotingCanBeApproved3DaysOrLessBeforeItsStart();\\n        }\\n        _;\\n    }\\n\\n    modifier enoughContentReadQuizAnswerAdded(\\n        bytes32[] memory _keccak256HashedAnswers\\n    ) {\\n        if (\\n            _keccak256HashedAnswers.length < MIN_TOTAL_CONTENT_READ_CHECK_ANSWER\\n        ) {\\n            revert NoEnoughContentReadQuizAnswerAdded();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleContentIpfsHashAssigned(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .articleContentCheckQuizIpfsHash\\n            )\\n        ) {\\n            revert NoArticleContentCheckIpfsAssignedToThisArticle();\\n        }\\n        _;\\n    }\\n\\n    modifier articleShouldExists(bytes32 _votingKey, bytes32 _articleKey) {\\n        if (proConArticles[_votingKey][_articleKey].publisher == address(0)) {\\n            revert ArticleNotExists();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleReponseAssigned(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseStatementIpfsHash\\n            )\\n        ) {\\n            revert NoArticleResponseAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier hasArticleResponseContentCheckIpfsHash(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey\\n    ) {\\n        if (\\n            isEmptyString(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash\\n            )\\n        ) {\\n            revert NoArticleResponseContentCheckIpfsAssigned();\\n        }\\n        _;\\n    }\\n\\n    modifier hasCreditsLeftToPublishArticle(bytes32 _votingKey) {\\n        if (\\n            publishArticleToVotingsCount[msg.sender][_votingKey] >=\\n            politicalActorVotingCredits[msg.sender]\\n        ) {\\n            revert NoMorePublishArticleCreditsRelatedToThisVoting();\\n        }\\n        _;\\n    }\\n\\n    // elections\\n\\n    modifier noUnclosedElections() {\\n        if (electionsStartDate != 0) {\\n            revert ThereIsAnOngoingElections();\\n        }\\n        _;\\n    }\\n\\n    modifier validApplication() {\\n        if (electionsStartDate == 0 || electionsStartDate < block.timestamp) {\\n            revert ElectionsNotScheduledOrAlreadyStarted();\\n        } else if (electionCandidateScores[msg.sender] > 0) {\\n            revert AccountAlreadyAppliedForElections();\\n        }\\n        _;\\n    }\\n\\n    modifier newElectionsStartDateIs30DaysAhead(uint _electionsStartDate) {\\n        if (\\n            _electionsStartDate < block.timestamp + ELECTION_START_END_INTERVAL\\n        ) {\\n            revert ElectionStartDateHasToBe30DaysAhead();\\n        }\\n        _;\\n    }\\n\\n    modifier validVote(address _voteOnAddress) {\\n        if (block.timestamp < electionsStartDate || electionsStartDate == 0) {\\n            revert ThereIsNoOngoingElections();\\n        } else if (block.timestamp > electionsEndDate) {\\n            revert ElectionsAlreadyFinished();\\n        } else if (msg.sender == _voteOnAddress) {\\n            revert AccountCantVoteOnItself();\\n        } else if (electionCandidateScores[_voteOnAddress] == 0) {\\n            revert VoteOnAccountNotBelongToAnyCandidate();\\n        } else if (electionVotes[msg.sender] != address(0)) {\\n            revert AccountAlreadyVoted();\\n        }\\n        _;\\n    }\\n\\n    modifier canCloseElections() {\\n        if (electionsStartDate == 0) {\\n            revert ElectionsAlreadyClosedOrNotYetScheduled();\\n        } else if (electionsEndDate + 7 days > block.timestamp) {\\n            revert ElectionsCanOnlyClose7DaysAfterTheirEndDate();\\n        }\\n        _;\\n    }\\n\\n    modifier minCandidateApplicationFeeCovered() {\\n        if (msg.value < electionsCandidateApplicationFee) {\\n            revert MinimumApplicationFeeNotCovered();\\n        }\\n        _;\\n    }\\n\\n    // CONTRACT LOGIC *****************************************************************\\n\\n    constructor() BVS_Roles() {}\\n\\n    receive() external payable {}\\n\\n    function scheduleNextElections(\\n        uint256 _electionsStartDate,\\n        uint256 _electionsEndDate\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        noUnclosedElections\\n        newElectionsStartDateIs30DaysAhead(_electionsStartDate)\\n    {\\n        electionsStartDate = _electionsStartDate;\\n        electionsEndDate = _electionsEndDate;\\n\\n        for (uint i = 0; i < politicalActors.length; i++) {\\n            _revokeRole(POLITICAL_ACTOR, politicalActors[i]);\\n            delete politicalActorVotingCredits[politicalActors[i]];\\n            delete politicalActors[i];\\n        }\\n        politicalActors = new address[](0);\\n    }\\n\\n    function applyForElections()\\n        public\\n        payable\\n        onlyRole(CITIZEN)\\n        minCandidateApplicationFeeCovered\\n        validApplication\\n    {\\n        electionCandidates.push(msg.sender);\\n        electionCandidateScores[msg.sender] = 1;\\n    }\\n\\n    function voteOnElections(\\n        address voteOnAddress\\n    ) public onlyRole(CITIZEN) validVote(voteOnAddress) {\\n        electionVotes[msg.sender] = voteOnAddress;\\n        electionVoters.push(msg.sender);\\n        electionCandidateScores[voteOnAddress]++;\\n    }\\n\\n    function closeElections() public onlyRole(ADMINISTRATOR) canCloseElections {\\n        // assign roles to the winners\\n        uint256 totalVotes = electionVoters.length;\\n        for (uint i = 0; i < electionCandidates.length; i++) {\\n            uint256 votesOwnedPercentage = ((electionCandidateScores[\\n                electionCandidates[i]\\n            ] - 1) * 1000) / totalVotes;\\n\\n            if (votesOwnedPercentage > MINIMUM_PERCENTAGE_OF_ELECTION_VOTES) {\\n                uint256 votingCycleTotalCredit = (votesOwnedPercentage -\\n                    MINIMUM_PERCENTAGE_OF_ELECTION_VOTES *\\n                    10) /\\n                    100 +\\n                    1;\\n\\n                _setupRole(POLITICAL_ACTOR, electionCandidates[i]);\\n                politicalActors.push(electionCandidates[i]);\\n                politicalActorVotingCredits[\\n                    electionCandidates[i]\\n                ] = votingCycleTotalCredit;\\n            }\\n\\n            delete electionCandidateScores[electionCandidates[i]];\\n        }\\n\\n        electionCandidates = new address[](0);\\n        electionVoters = new address[](0);\\n\\n        electionsStartDate = 0;\\n    }\\n\\n    function unlockVotingBudget(\\n        bytes32 _votingKey\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingBelongsToSender(_votingKey)\\n        votingWon(_votingKey)\\n    {\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: getVoting(_votingKey).budget\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert();\\n        }\\n\\n        votings[_votingKey].budget = 0; // make sure no more money can be requested\\n    }\\n\\n    function setFirstVotingCycleStartDate(\\n        uint _firstVotingCycleStartDate\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        firstVotingCycleStartDateIsInTheFuture(_firstVotingCycleStartDate)\\n    {\\n        // reset votingCycleStartVoteCount;\\n        for (uint i = 0; i < votingCycleIndexes.length; i++) {\\n            for (uint u = 0; u < politicalActors.length; u++) {\\n                delete votingCycleStartVoteCount[votingCycleIndexes[i]][\\n                    politicalActors[u]\\n                ];\\n            }\\n        }\\n\\n        votingCycleIndexes = new uint[](0);\\n\\n        firstVotingCycleStartDate = _firstVotingCycleStartDate;\\n    }\\n\\n    function scheduleNewVoting(\\n        string calldata _contentIpfsHash,\\n        uint _startDate,\\n        uint _budget\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingPeriodIsActive\\n        newVotingScheduledAtLeast10daysAhead(_startDate)\\n        newVotingScheduledMaximum30daysAhead(_startDate)\\n    {\\n        uint timePassed = block.timestamp - firstVotingCycleStartDate;\\n        uint votingCycleCount = uint(timePassed / VOTING_CYCLE_INTERVAL);\\n\\n        if (\\n            timePassed - votingCycleCount * VOTING_CYCLE_INTERVAL >\\n            VOTING_CYCLE_INTERVAL - NEW_VOTING_PERIOD_MIN_SCHEDULE_AHEAD_TIME\\n        ) {\\n            revert CantStartNewVointg10daysOrLessBeforeEndOfCycle();\\n        }\\n\\n        if (\\n            politicalActorVotingCredits[msg.sender] <=\\n            votingCycleStartVoteCount[votingCycleCount][msg.sender]\\n        ) {\\n            revert AccountRanOutOfVotingCreditsForThisVotingCycle();\\n        }\\n\\n        votingCycleStartVoteCount[votingCycleCount][msg.sender]++;\\n\\n        bytes32 _votingKey = keccak256(\\n            abi.encodePacked(block.timestamp, msg.sender, _contentIpfsHash)\\n        );\\n\\n        votings[_votingKey].budget = _budget;\\n        votings[_votingKey].key = _votingKey;\\n        votings[_votingKey].creator = msg.sender;\\n        votings[_votingKey].contentIpfsHash = _contentIpfsHash;\\n        votings[_votingKey].startDate = _startDate;\\n        votings[_votingKey].voteOnAScore = 0;\\n        votings[_votingKey].voteOnBScore = 0;\\n\\n        bool votingCycleIndexAlreadyAdded = false;\\n        for (uint i = 0; i < votingCycleIndexes.length; i++) {\\n            if (votingCycleCount == votingCycleIndexes[i]) {\\n                votingCycleIndexAlreadyAdded = true;\\n                break;\\n            }\\n        }\\n\\n        if (!votingCycleIndexAlreadyAdded) {\\n            votingCycleIndexes.push(votingCycleCount);\\n        }\\n\\n        votingKeys.push(_votingKey);\\n    }\\n\\n    function assignQuizIpfsHashToVoting(\\n        bytes32 _votingKey,\\n        string memory _quizIpfsHash\\n    ) public onlyRole(ADMINISTRATOR) votingExists(_votingKey) {\\n        votings[_votingKey].votingContentCheckQuizIpfsHash = _quizIpfsHash;\\n    }\\n\\n    function addKeccak256HashedAnswersToVotingContent(\\n        bytes32 _votingKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        votingContentQuizIpfsAssigned(_votingKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        votingContentReadCheckAnswers[_votingKey] = _keccak256HashedAnswers;\\n    }\\n\\n    function approveVoting(\\n        bytes32 _votingKey\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        votingNotYetStarted(_votingKey)\\n        approveAttempt3DaysBeforeVotingStarts(_votingKey)\\n        enoughContentReadQuizAnswerAdded(\\n            votingContentReadCheckAnswers[_votingKey]\\n        )\\n        creatorOfVotingRespondedOnArticles(_votingKey)\\n    {\\n        votings[_votingKey].approved = true;\\n    }\\n\\n    function publishProConArticle(\\n        bytes32 _votingKey,\\n        string memory _ipfsHash,\\n        bool _isVoteOnA\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        hasCreditsLeftToPublishArticle(_votingKey)\\n    {\\n        bytes32 articleKey = keccak256(\\n            abi.encodePacked(block.timestamp, msg.sender, _ipfsHash)\\n        );\\n\\n        proConArticles[_votingKey][articleKey] = ProConArticle(\\n            _votingKey,\\n            false,\\n            false,\\n            msg.sender,\\n            _ipfsHash,\\n            _isVoteOnA,\\n            \\\"\\\",\\n            \\\"\\\",\\n            \\\"\\\"\\n        );\\n        articleKeys.push(articleKey);\\n        publishArticleToVotingsCount[msg.sender][_votingKey]++;\\n    }\\n\\n    function assignQuizIpfsHashToArticleOrResponse(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        string memory _quizIpfsHash,\\n        bool assignToArticleContent\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        articleShouldExists(_votingKey, _articleKey)\\n    {\\n        if (assignToArticleContent) {\\n            proConArticles[_votingKey][_articleKey]\\n                .articleContentCheckQuizIpfsHash = _quizIpfsHash;\\n        } else {\\n            proConArticles[_votingKey][_articleKey]\\n                .responseContentCheckQuizIpfsHash = _quizIpfsHash;\\n        }\\n    }\\n\\n    function addKeccak256HashedAnswersToArticle(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        hasArticleContentIpfsHashAssigned(_votingKey, _articleKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        proConArticles[_votingKey][_articleKey].isArticleApproved = true;\\n        articleContentReadCheckAnswers[_articleKey] = _keccak256HashedAnswers;\\n    }\\n\\n    function publishProConArticleResponse(\\n        bytes32 _votingKey,\\n        bytes32 _proConArticleKey,\\n        string memory _ipfsHash\\n    )\\n        public\\n        onlyRole(POLITICAL_ACTOR)\\n        votingNotYetStarted(_votingKey)\\n        criticisedArticleRelatedToYourVoting(_votingKey, _proConArticleKey)\\n    {\\n        proConArticles[_votingKey][_proConArticleKey]\\n            .responseStatementIpfsHash = _ipfsHash;\\n    }\\n\\n    function addKeccak256HashedAnswersToArticleResponse(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        bytes32[] memory _keccak256HashedAnswers\\n    )\\n        public\\n        onlyRole(ADMINISTRATOR)\\n        articleShouldExists(_votingKey, _articleKey)\\n        hasArticleReponseAssigned(_votingKey, _articleKey)\\n        hasArticleResponseContentCheckIpfsHash(_votingKey, _articleKey)\\n        votingNotYetStarted(_votingKey)\\n        enoughContentReadQuizAnswerAdded(_keccak256HashedAnswers)\\n    {\\n        articleContentResponseReadCheckAnswers[\\n            _articleKey\\n        ] = _keccak256HashedAnswers;\\n        proConArticles[_votingKey][_articleKey].isResponseApproved = true;\\n    }\\n\\n    function completeContentReadQuiz(\\n        uint contentType,\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        string[] memory _answers\\n    ) public onlyRole(CITIZEN) {\\n        uint[] memory answerIndexes;\\n        bool isCorrect;\\n\\n        // voting\\n        if (contentType == 1) {\\n            answerIndexes = getAccountVotingQuizAnswerIndexes(\\n                _votingKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                votingContentReadCheckAnswers[_votingKey],\\n                _answers\\n            );\\n            votes[msg.sender][_votingKey].isContentCompleted = true;\\n        }\\n        // article\\n        else if (contentType == 2) {\\n            answerIndexes = getAccountArticleQuizAnswerIndexes(\\n                _votingKey,\\n                _articleKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                articleContentReadCheckAnswers[_articleKey],\\n                _answers\\n            );\\n            articlesCompleted[msg.sender].push(_articleKey);\\n            // article respond\\n        } else if (contentType == 3) {\\n            answerIndexes = getAccountArticleResponseQuizAnswerIndexes(\\n                _votingKey,\\n                _articleKey,\\n                msg.sender\\n            );\\n\\n            isCorrect = isContentReadQuizCorrect(\\n                answerIndexes,\\n                articleContentResponseReadCheckAnswers[_articleKey],\\n                _answers\\n            );\\n\\n            articlesResponseCompleted[msg.sender].push(_articleKey);\\n        }\\n\\n        require(isCorrect, \\\"Some of your provided answers are wrong\\\");\\n    }\\n\\n    function calculateVoteScore(\\n        bytes32 _votingKey,\\n        address _account\\n    ) public view returns (uint) {\\n        uint voteScore = MIN_VOTE_SCORE;\\n\\n        uint completedArticlesLength = articlesCompleted[_account].length;\\n\\n        uint numOfVoteOnACompletedArticleValue = 0;\\n        uint numOfVoteOnBCompletedArticleValue = 0;\\n\\n        uint numOfVoteOnACompletedResponseValue = 0;\\n        uint numOfVoteOnBCompletedResponseValue = 0;\\n\\n        for (uint i = 0; i < completedArticlesLength; i++) {\\n            ProConArticle memory completedProConArticle = proConArticles[\\n                _votingKey\\n            ][articlesCompleted[_account][i]];\\n            if (completedProConArticle.votingKey == _votingKey) {\\n                if (completedProConArticle.isVoteOnA) {\\n                    numOfVoteOnACompletedArticleValue += 1;\\n                } else {\\n                    numOfVoteOnBCompletedArticleValue += 1;\\n                }\\n            }\\n        }\\n\\n        uint completedArticlesResponseLength = articlesResponseCompleted[\\n            _account\\n        ].length;\\n        for (uint u = 0; u < completedArticlesResponseLength; u++) {\\n            ProConArticle\\n                memory completedProConArticleWithResponse = proConArticles[\\n                    _votingKey\\n                ][articlesResponseCompleted[_account][u]];\\n            if (completedProConArticleWithResponse.votingKey == _votingKey) {\\n                if (completedProConArticleWithResponse.isVoteOnA) {\\n                    numOfVoteOnACompletedResponseValue += 1;\\n                } else {\\n                    numOfVoteOnBCompletedResponseValue += 1;\\n                }\\n            }\\n        }\\n\\n        uint noPairArticleCompleteCount = 0;\\n\\n        if (\\n            numOfVoteOnACompletedArticleValue >\\n            numOfVoteOnBCompletedArticleValue\\n        ) {\\n            noPairArticleCompleteCount = (numOfVoteOnACompletedArticleValue -\\n                numOfVoteOnBCompletedArticleValue);\\n        } else {\\n            noPairArticleCompleteCount = (numOfVoteOnBCompletedArticleValue -\\n                numOfVoteOnACompletedArticleValue);\\n        }\\n\\n        voteScore +=\\n            ((numOfVoteOnACompletedArticleValue +\\n                numOfVoteOnBCompletedArticleValue -\\n                noPairArticleCompleteCount) / 2) *\\n            25 +\\n            (noPairArticleCompleteCount * 5);\\n\\n        // add the balanced way calculated scores after completed responses\\n        uint noPairResponseCompleteCount = 0;\\n\\n        if (\\n            numOfVoteOnACompletedResponseValue >\\n            numOfVoteOnBCompletedResponseValue\\n        ) {\\n            noPairResponseCompleteCount = (numOfVoteOnACompletedResponseValue -\\n                numOfVoteOnBCompletedResponseValue);\\n        } else {\\n            noPairResponseCompleteCount = (numOfVoteOnBCompletedResponseValue -\\n                numOfVoteOnACompletedResponseValue);\\n        }\\n\\n        voteScore +=\\n            ((numOfVoteOnACompletedResponseValue +\\n                numOfVoteOnBCompletedResponseValue -\\n                noPairResponseCompleteCount) / 2) *\\n            10 +\\n            (noPairResponseCompleteCount * 2);\\n\\n        return voteScore;\\n    }\\n\\n    function voteOnVoting(\\n        bytes32 _votingKey,\\n        bool _voteOnA\\n    )\\n        public\\n        onlyRole(CITIZEN)\\n        votingIsOngoing(_votingKey)\\n        votingApproved(_votingKey)\\n        contentCheckQuizCompleted(_votingKey)\\n        notVotedYetOnThisVoting(_votingKey)\\n    {\\n        // calculate vote score\\n        uint voteScore = calculateVoteScore(_votingKey, msg.sender);\\n\\n        // add new vote\\n        if (_voteOnA) {\\n            votings[_votingKey].voteOnAScore += voteScore;\\n        } else {\\n            votings[_votingKey].voteOnBScore += voteScore;\\n        }\\n\\n        votings[_votingKey].voteCount++;\\n        votes[msg.sender][_votingKey].voted = true;\\n    }\\n\\n    function getAccountVotingQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                votings[_votingKey].votingContentCheckQuizIpfsHash,\\n                votings[_votingKey].contentIpfsHash,\\n                votings[_votingKey].startDate,\\n                votingContentReadCheckAnswers[_votingKey].length,\\n                VOTING_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function getAccountArticleQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                proConArticles[_votingKey][_articleKey]\\n                    .articleContentCheckQuizIpfsHash,\\n                proConArticles[_votingKey][_articleKey].articleIpfsHash,\\n                votings[_votingKey].startDate,\\n                articleContentReadCheckAnswers[_articleKey].length,\\n                ARTICLE_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function getAccountArticleResponseQuizAnswerIndexes(\\n        bytes32 _votingKey,\\n        bytes32 _articleKey,\\n        address _account\\n    ) public view returns (uint[] memory) {\\n        return\\n            getAccountQuizAnswerIndexes(\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseContentCheckQuizIpfsHash,\\n                proConArticles[_votingKey][_articleKey]\\n                    .responseStatementIpfsHash,\\n                votings[_votingKey].startDate,\\n                articleContentResponseReadCheckAnswers[_articleKey].length,\\n                ARTICLE_RESPONSE_CHECK_ASKED_NUM_OF_QUESTIONS,\\n                _account\\n            );\\n    }\\n\\n    function isContentReadQuizCorrect(\\n        uint[] memory _answerIndexes,\\n        bytes32[] memory _readCheckAnswers,\\n        string[] memory _answers\\n    ) public view onlyRole(CITIZEN) returns (bool) {\\n        bool areAnswersCorrect = true;\\n\\n        for (uint i = 0; i < _answerIndexes.length; i++) {\\n            if (\\n                _readCheckAnswers[_answerIndexes[i] - 1] !=\\n                keccak256(bytes(_answers[i]))\\n            ) {\\n                areAnswersCorrect = false;\\n            }\\n        }\\n\\n        return areAnswersCorrect;\\n    }\\n\\n    function getAccountQuizAnswerIndexes(\\n        string memory ipfsHash1,\\n        string memory ipfsHash2,\\n        uint _date,\\n        uint _numOfTotalQuestions,\\n        uint _numOfQuiestionsToAsk,\\n        address _account\\n    ) internal pure returns (uint[] memory) {\\n        bytes32 hashCode = keccak256(\\n            abi.encodePacked(ipfsHash1, ipfsHash2, _account)\\n        );\\n\\n        uint numOfVotingQuizQuestions = uint(_numOfTotalQuestions);\\n\\n        uint[] memory questionsToAsk = new uint[](_numOfQuiestionsToAsk);\\n\\n        uint countAddedQuestions = 0;\\n        for (\\n            uint i = uint(_date % numOfVotingQuizQuestions);\\n            countAddedQuestions < _numOfQuiestionsToAsk;\\n            i++\\n        ) {\\n            uint questionNth = (uint8(hashCode[i]) % numOfVotingQuizQuestions) +\\n                1;\\n\\n            uint u = 0;\\n            do {\\n                if (questionsToAsk[u] == questionNth) {\\n                    questionNth++;\\n                    u = 0;\\n                    if (questionNth > numOfVotingQuizQuestions) {\\n                        questionNth = 1;\\n                    }\\n                } else {\\n                    u++;\\n                }\\n            } while (u < countAddedQuestions);\\n\\n            questionsToAsk[countAddedQuestions] = questionNth;\\n            countAddedQuestions++;\\n        }\\n\\n        return questionsToAsk;\\n    }\\n\\n    function isVotingWon(\\n        bytes32 _votingKey,\\n        bool _isAWinExpected\\n    )\\n        public\\n        view\\n        votingNotFinished(_votingKey)\\n        votingApproved(_votingKey)\\n        enoughVotesArrived(_votingKey)\\n        returns (bool)\\n    {\\n        if (_isAWinExpected) {\\n            return\\n                votings[_votingKey].voteOnAScore >=\\n                votings[_votingKey].voteOnBScore;\\n        } else {\\n            return\\n                votings[_votingKey].voteOnBScore >\\n                votings[_votingKey].voteOnAScore;\\n        }\\n    }\\n\\n    function getVoting(bytes32 _votingKey) public view returns (Voting memory) {\\n        return votings[_votingKey];\\n    }\\n\\n    function getVotingKeysLength() public view returns (uint) {\\n        return votingKeys.length;\\n    }\\n\\n    function getArticleKeysLength() public view returns (uint) {\\n        return articleKeys.length;\\n    }\\n\\n    function getVotinCycleIndexesSize() public view returns (uint) {\\n        return votingCycleIndexes.length;\\n    }\\n\\n    function getElectionCandidatesSize() public view returns (uint256) {\\n        return electionCandidates.length;\\n    }\\n\\n    function getElectionVotersSize() public view returns (uint256) {\\n        return electionVoters.length;\\n    }\\n}\\n\",\"keccak256\":\"0x151994c088af1ba3effe1354b4263a318f7ccf3e5825194c0ecde181f439be85\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405261271060005562989680600b553480156200001e57600080fd5b506001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018054336001600160a01b03199182168117909255600082815260066020526040812084905560048054948501815590527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9092018054909216811790915542608052620000d9907fb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b4661906200010b565b620001057f313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9336200010b565b6200017d565b60008281526009602090815260408083206001600160a01b03851680855290835292819020805460ff19166001179055805185815291820192909252338183015290517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d916060908290030190a15050565b6080516159a2620001a7600039600081816103fd0152818161293b0152612a4601526159a26000f3fe6080604052600436106103df5760003560e01c806305b34410146103eb57806309a34f001461043257806309d39b791461046a57806314bfd6d01461048a57806314e00b6d146104aa57806314e55bd0146104bf57806319a8fb1c146104d457806319d3cfd4146104f45780631db5ade8146105095780631db6d106146105645780631f0317b41461059a578063206f0af4146105b057806323559c57146105e8578063257de397146106305780632bad9a92146106525780632c23da78146106725780632d3f3e88146106875780632e5371e8146106b75780632f2deba3146106cc5780632f3ddb8f146106ec578063300637ce146107015780633224caf91461072e5780633378f39e146107655780633550644d1461078557806337e3f71c146107a55780633ad4ecee146107c55780633d61f033146107d85780633ea29d75146107f85780633f691cb314610825578063407135f114610845578063424ae2b71461084d5780634337b8451461086d578063445cb2df1461088d578063466dff58146104bf57806349900c0f146108ba5780634c3cc1bc146108cf5780634cb401a614610907578063509779d61461091e578063532da8e31461093e5780635657d7cc146109605780635675d8981461098057806359fe7279146109a05780635a0c7d4b146106b75780635d3d05f3146109c257806367fadfd9146109e257806369d2a73314610a045780636c5140bd14610a24578063713257c414610a44578063727b81a314610a645780637b7c5d5714610a7a5780637d7c591b14610ab25780638043e65914610ad25780638ce3885114610ae957806391d1485414610b0957806395f808c014610b295780639aa2d819146106b75780639c5a985014610b3f578063a1f8316514610b56578063a438d20814610b8b578063a45f379e14610ba2578063a880aa31146106b7578063a9914e9914610bc2578063ae12f8ab14610bd7578063afbfea7f14610bf7578063b0f8b42a14610c24578063b128744c14610c44578063b1a03aed14610c64578063bbc3912814610c84578063bcc36be714610c99578063c06b62ea14610cb9578063c202583814610cd9578063c84d221414610cf9578063c8c99cc314610d0f578063cab1eee414610d2f578063cad1043b14610ad2578063cfaf234a14610d44578063cff7b24214610d59578063d77a603c14610d79578063d9b1962214610d99578063e3ab974614610dae578063e64ae4bd14610dc4578063eb0ce58914610de4578063f10e098414610e04578063f4388c6b146104bf578063f8785b4f146104bf578063fbd7082714610e24578063fda490d914610e44578063fe3fd17514610e6457600080fd5b366103e657005b600080fd5b3480156103f757600080fd5b5061041f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561043e57600080fd5b5061045261044d366004614bb8565b610e91565b6040516001600160a01b039091168152602001610429565b34801561047657600080fd5b50610452610485366004614bb8565b610ebb565b34801561049657600080fd5b506104526104a5366004614bb8565b610ecb565b3480156104b657600080fd5b50601e5461041f565b3480156104cb57600080fd5b5061041f600581565b3480156104e057600080fd5b5061041f6104ef366004614bb8565b610edb565b34801561050057600080fd5b5060045461041f565b34801561051557600080fd5b5061054d610524366004614bed565b601860209081526000928352604080842090915290825290205460ff8082169161010090041682565b604080519215158352901515602083015201610429565b34801561057057600080fd5b5061045261057f366004614c17565b601d602052600090815260409020546001600160a01b031681565b3480156105a657600080fd5b5061041f600c5481565b3480156105bc57600080fd5b5061041f6105cb366004614bed565b600760209081526000928352604080842090915290825290205481565b3480156105f457600080fd5b5061061b610603366004614c17565b601c6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610429565b34801561063c57600080fd5b5061065061064b366004614bb8565b610efc565b005b34801561065e57600080fd5b5061065061066d366004614bb8565b610f1b565b34801561067e57600080fd5b5060175461041f565b34801561069357600080fd5b506106a76106a2366004614c42565b611135565b6040519015158152602001610429565b3480156106c357600080fd5b5061041f600a81565b3480156106d857600080fd5b506106506106e7366004614d23565b611245565b3480156106f857600080fd5b5060135461041f565b34801561070d57600080fd5b5061072161071c366004614d83565b61130e565b6040516104299190614db8565b34801561073a57600080fd5b5061074e610749366004614bb8565b611495565b6040516104299b9a99989796959493929190614e4c565b34801561077157600080fd5b50610452610780366004614bb8565b611607565b34801561079157600080fd5b506107216107a0366004614ecb565b611617565b3480156107b157600080fd5b5061041f6107c0366004614eee565b611786565b6106506107d3366004614bb8565b6117b7565b3480156107e457600080fd5b506106506107f3366004614eee565b6117ec565b34801561080457600080fd5b5061041f610813366004614c17565b60066020526000908152604090205481565b34801561083157600080fd5b50610650610840366004614f10565b61194a565b610650611a10565b34801561085957600080fd5b50610650610868366004614fed565b611b0e565b34801561087957600080fd5b50610650610888366004614c17565b611c5a565b34801561089957600080fd5b506108ad6108a8366004614bb8565b611e09565b6040516104299190615032565b3480156108c657600080fd5b50610650612030565b3480156108db57600080fd5b5061041f6108ea366004614bed565b601260209081526000928352604080842090915290825290205481565b34801561091357600080fd5b5061041f620d2f0081565b34801561092a57600080fd5b5061041f610939366004614bed565b6122c7565b34801561094a57600080fd5b5061041f60008051602061592d83398151915281565b34801561096c57600080fd5b5061065061097b366004614fed565b6122e3565b34801561098c57600080fd5b5061065061099b366004614c17565b612494565b3480156109ac57600080fd5b5061041f60008051602061590d83398151915281565b3480156109ce57600080fd5b506106506109dd366004614bb8565b6124bb565b3480156109ee57600080fd5b5061041f60008051602061594d83398151915281565b348015610a1057600080fd5b50610650610a1f3660046150fe565b6125c5565b348015610a3057600080fd5b50610650610a3f36600461517c565b612895565b348015610a5057600080fd5b506106a7610a5f36600461522e565b612c16565b348015610a7057600080fd5b5061041f60005481565b348015610a8657600080fd5b5061041f610a95366004614ecb565b601160209081526000928352604080842090915290825290205481565b348015610abe57600080fd5b50610650610acd366004614c42565b612cc5565b348015610ade57600080fd5b5061041f62278d0081565b348015610af557600080fd5b5061041f610b04366004614bb8565b612ea6565b348015610b1557600080fd5b506106a7610b24366004614ecb565b612eb6565b348015610b3557600080fd5b5061041f600b5481565b348015610b4b57600080fd5b5061041f6203f48081565b348015610b6257600080fd5b50610b76610b71366004614eee565b612ee1565b60405161042999989796959493929190615300565b348015610b9757600080fd5b5061041f6212750081565b348015610bae57600080fd5b506106a7610bbd366004615380565b61316e565b348015610bce57600080fd5b50601b5461041f565b348015610be357600080fd5b50610650610bf23660046153b4565b6131a8565b348015610c0357600080fd5b5061041f610c12366004614c17565b60086020526000908152604090205481565b348015610c3057600080fd5b5061041f610c3f366004614eee565b61340c565b348015610c5057600080fd5b5061041f610c5f366004614eee565b613428565b348015610c7057600080fd5b5061041f610c7f366004614bb8565b613444565b348015610c9057600080fd5b5060025461041f565b348015610ca557600080fd5b50610650610cb436600461540d565b613454565b348015610cc557600080fd5b50610650610cd4366004614c17565b6134c2565b348015610ce557600080fd5b5061041f610cf4366004614ecb565b613782565b348015610d0557600080fd5b5061041f600d5481565b348015610d1b57600080fd5b50610452610d2a366004614bed565b613f5f565b348015610d3b57600080fd5b5060165461041f565b348015610d5057600080fd5b5061041f603281565b348015610d6557600080fd5b50610650610d74366004614bb8565b613f97565b348015610d8557600080fd5b506106a7610d94366004614bed565b614086565b348015610da557600080fd5b5060015461041f565b348015610dba57600080fd5b5061041f600a5481565b348015610dd057600080fd5b50610452610ddf366004614bb8565b614092565b348015610df057600080fd5b5061041f610dff366004614bed565b6140a2565b348015610e1057600080fd5b50610721610e1f366004614d83565b6140be565b348015610e3057600080fd5b50610650610e3f366004615453565b61423d565b348015610e5057600080fd5b50610650610e5f3660046154a0565b614461565b348015610e7057600080fd5b5061041f610e7f366004614c17565b60036020526000908152604090205481565b60048181548110610ea157600080fd5b6000918252602090912001546001600160a01b0316905081565b60028181548110610ea157600080fd5b60018181548110610ea157600080fd5b60178181548110610eeb57600080fd5b600091825260209091200154905081565b60008051602061590d833981519152610f158133614505565b50600055565b60008051602061590d833981519152610f348133614505565b6000828152601460205260409020600601548290421115610f68576040516301da8d1f60e51b815260040160405180910390fd5b60008381526014602052604090206006015483904290610f8c906203f480906154f2565b1115610fab57604051639aaaf57560e01b815260040160405180910390fd5b60008481526010602090815260409182902080548351818402810184019094528084529091830182828015610fff57602002820191906000526020600020905b815481526020019060010190808311610feb575b5050505050600a8151101561102757604051639f14e9bf60e01b815260040160405180910390fd5b601754859060019060005b818110156110f4576000848152601560205260408120601780549192918490811061105f5761105f615505565b6000918252602080832090910154835282019290925260400190206001015460ff16156110e257600084815260156020526040812060178054919291849081106110ab576110ab615505565b9060005260206000200154815260200190815260200160002060010160019054906101000a900460ff166110e257600092506110f4565b806110ec8161551b565b915050611032565b508161111357604051630632790560e51b815260040160405180910390fd5b505050600094855250506014602052505060409020805460ff19166001179055565b60008281526014602052604081206006015483904290611159906212750090615534565b1115611178576040516368cd2a8560e01b815260040160405180910390fd5b600084815260146020526040902054849060ff166111a957604051633f2151bd60e21b815260040160405180910390fd5b6004546000868152601460205260409020600301548691600a916111ce906064615547565b6111d89190615574565b10156111f7576040516333722a1360e21b815260040160405180910390fd5b841561121f57600086815260146020526040902060088101546007909101541015935061123c565b600086815260146020526040902060078101546008909101541193505b50505092915050565b60008051602061590d83398151915261125e8133614505565b6000858152601560209081526040808320878452909152902060010154859085906201000090046001600160a01b03166112ab57604051636fdc2add60e11b815260040160405180910390fd5b83156112dd57600087815260156020908152604080832089845290915290206005016112d7868261561d565b50611305565b60008781526015602090815260408083208984529091529020600601611303868261561d565b505b50505050505050565b60008381526015602090815260408083208584529091529020600601805460609161148d9161133c90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461136890615588565b80156113b55780601f1061138a576101008083540402835291602001916113b5565b820191906000526020600020905b81548152906001019060200180831161139857829003601f168201915b50505060008881526015602090815260408083208a8452909152902060040180549092506113e39150615588565b80601f016020809104026020016040519081016040528092919081815260200182805461140f90615588565b801561145c5780601f106114315761010080835404028352916020019161145c565b820191906000526020600020905b81548152906001019060200180831161143f57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600f90925290912054909250905060058761455a565b949350505050565b60146020526000908152604090208054600182015460028301546003840154600485015460058601805460ff8088169861010090980416966001600160a01b039093169291906114e490615588565b80601f016020809104026020016040519081016040528092919081815260200182805461151090615588565b801561155d5780601f106115325761010080835404028352916020019161155d565b820191906000526020600020905b81548152906001019060200180831161154057829003601f168201915b50505050509080600601549080600701549080600801549080600901805461158490615588565b80601f01602080910402602001604051908101604052809291908181526020018280546115b090615588565b80156115fd5780601f106115d2576101008083540402835291602001916115fd565b820191906000526020600020905b8154815290600101906020018083116115e057829003601f168201915b505050505090508b565b601e8181548110610ea157600080fd5b6000828152601460205260409020600901805460609161177d9161163a90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461166690615588565b80156116b35780601f10611688576101008083540402835291602001916116b3565b820191906000526020600020905b81548152906001019060200180831161169657829003601f168201915b505050600087815260146020526040902060050180549092506116d69150615588565b80601f016020809104026020016040519081016040528092919081815260200182805461170290615588565b801561174f5780601f106117245761010080835404028352916020019161174f565b820191906000526020600020905b81548152906001019060200180831161173257829003601f168201915b505050600088815260146020908152604080832060060154601090925290912054909250905060058761455a565b90505b92915050565b601060205281600052604060002081815481106117a257600080fd5b90600052602060002001600091509150505481565b6000543410156117da5760405163529c3ec360e11b815260040160405180910390fd5b33600090815260086020526040902055565b60008051602061590d8339815191526118058133614505565b600c5415611826576040516306f17dd960e01b815260040160405180910390fd5b8261183462278d0042615534565b81101561185457604051635311b60360e01b815260040160405180910390fd5b600c849055600d83905560005b600254811015611925576118aa60008051602061592d8339815191526002838154811061189057611890615505565b6000918252602090912001546001600160a01b03166146c5565b60036000600283815481106118c1576118c1615505565b60009182526020808320909101546001600160a01b0316835282019290925260400181205560028054829081106118fa576118fa615505565b600091825260209091200180546001600160a01b03191690558061191d8161551b565b915050611861565b50604080516000815260208101918290525161194391600291614b03565b5050505050565b60008051602061592d8339815191526119638133614505565b6000848152601460205260409020600601548490421115611997576040516301da8d1f60e51b815260040160405180910390fd5b600085815260156020908152604080832087845282528083205483526014909152902060040154859085906001600160a01b031633146119ea57604051634f2161f960e01b815260040160405180910390fd5b60008781526015602090815260408083208984529091529020600401611303868261561d565b60008051602061594d833981519152611a298133614505565b600b54341015611a4c5760405163529c3ec360e11b815260040160405180910390fd5b600c541580611a5c575042600c54105b15611a7a57604051630bd094bd60e21b815260040160405180910390fd5b336000908152601c602052604090205463ffffffff1615611aae57604051634cc9446360e11b815260040160405180910390fd5b50601b805460018181019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b031916339081179091556000908152601c60205260409020805463ffffffff19169091179055565b60008051602061590d833981519152611b278133614505565b60008481526015602090815260408083208684529091529020600501805485918591611bda9190611b5790615588565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8390615588565b8015611bd05780601f10611ba557610100808354040283529160200191611bd0565b820191906000526020600020905b815481529060010190602001808311611bb357829003601f168201915b505050505061316e565b15611bf85760405163e88eb9cf60e01b815260040160405180910390fd5b83600a81511015611c1c57604051639f14e9bf60e01b815260040160405180910390fd5b600087815260156020908152604080832089845282528083206001908101805460ff19169091179055600e8252909120865161130392880190614b68565b60008051602061594d833981519152611c738133614505565b81600c54421080611c845750600c54155b15611ca25760405163071620af60e01b815260040160405180910390fd5b600d54421115611cc557604051630cf0edd160e01b815260040160405180910390fd5b6001600160a01b0381163303611ced5760405162b5d96560e51b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604081205463ffffffff169003611d2b576040516311bb144160e01b815260040160405180910390fd5b336000908152601d60205260409020546001600160a01b031615611d625760405163b9ef1a7560e01b815260040160405180910390fd5b336000818152601d6020908152604080832080546001600160a01b0389166001600160a01b03199182168117909255601e8054600181019091557f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350018054909116909517909455928252601c9052908120805463ffffffff1691611de5836156d6565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050565b611e7660405180610160016040528060001515815260200160001515815260200160008019168152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081525090565b600082815260146020908152604091829020825161016081018452815460ff8082161515835261010090910416151592810192909252600181015492820192909252600282015460608201526003820154608082015260048201546001600160a01b031660a082015260058201805491929160c084019190611ef790615588565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2390615588565b8015611f705780601f10611f4557610100808354040283529160200191611f70565b820191906000526020600020905b815481529060010190602001808311611f5357829003601f168201915b50505050508152602001600682015481526020016007820154815260200160088201548152602001600982018054611fa790615588565b80601f0160208091040260200160405190810160405280929190818152602001828054611fd390615588565b80156120205780601f10611ff557610100808354040283529160200191612020565b820191906000526020600020905b81548152906001019060200180831161200357829003601f168201915b5050505050815250509050919050565b60008051602061590d8339815191526120498133614505565b600c5460000361206c5760405163530c5b4f60e11b815260040160405180910390fd5b42600d5462093a8061207e9190615534565b111561209d57604051631967d9a160e11b815260040160405180910390fd5b601e5460005b601b54811015612281576000826001601c6000601b86815481106120c9576120c9615505565b60009182526020808320909101546001600160a01b031683528201929092526040019020546120fe919063ffffffff166156f9565b61210a906103e861571d565b63ffffffff1661211a9190615574565b9050600a8111156122285760006064612134600a80615547565b61213e90846154f2565b6121489190615574565b612153906001615534565b905061219460008051602061592d833981519152601b858154811061217a5761217a615505565b6000918252602090912001546001600160a01b0316614739565b6002601b84815481106121a9576121a9615505565b6000918252602080832090910154835460018101855593835290822090920180546001600160a01b0319166001600160a01b0390931692909217909155601b8054839260039290918790811061220157612201615505565b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b601c6000601b848154811061223f5761223f615505565b60009182526020808320909101546001600160a01b031683528201929092526040019020805463ffffffff1916905550806122798161551b565b9150506120a3565b50604080516000815260208101918290525161229f91601b91614b03565b5060408051600081526020810191829052516122bd91601e91614b03565b50506000600c5550565b601a60205281600052604060002081815481106117a257600080fd5b60008051602061590d8339815191526122fc8133614505565b6000848152601560209081526040808320868452909152902060010154849084906201000090046001600160a01b031661234957604051636fdc2add60e11b815260040160405180910390fd5b600086815260156020908152604080832088845290915290206004018054879187916123799190611b5790615588565b156123975760405163279a7c4360e11b815260040160405180910390fd5b60008881526015602090815260408083208a845290915290206006018054899189916123c79190611b5790615588565b156123e5576040516323120adf60e21b815260040160405180910390fd5b60008a8152601460205260409020600601548a90421115612419576040516301da8d1f60e51b815260040160405180910390fd5b88600a8151101561243d57604051639f14e9bf60e01b815260040160405180910390fd5b60008b8152600f602090815260409091208b5161245c928d0190614b68565b5050506000998a525050601560209081526040808a20988a5297905250505092909320600101805461ff001916610100179055505050565b60008051602061590d8339815191526124ad8133614505565b6124b7338361479a565b5050565b60008051602061590d8339815191526124d48133614505565b81428110156124f6576040516321ff628560e11b815260040160405180910390fd5b60005b60135481101561259f5760005b60025481101561258c57601160006013848154811061252757612527615505565b9060005260206000200154815260200190815260200160002060006002838154811061255557612555615505565b60009182526020808320909101546001600160a01b03168352820192909252604001812055806125848161551b565b915050612506565b50806125978161551b565b9150506124f9565b5060408051600081526020810191829052516125bd91601391614b68565b505050600a55565b60008051602061592d8339815191526125de8133614505565b42600a5411806125ee5750600a54155b1561260c576040516359c6f10760e11b815260040160405180910390fd5b8261261a620d2f0042615534565b81101561263a5760405163f401736760e01b815260040160405180910390fd5b8361264862278d0042615534565b81111561266857604051630e8eaa6b60e31b815260040160405180910390fd5b6000600a544261267891906154f2565b9050600061268962278d0083615574565b905061269b620d2f0062278d006154f2565b6126a862278d0083615547565b6126b290846154f2565b11156126d1576040516317a0acc960e31b815260040160405180910390fd5b60008181526011602090815260408083203384528252808320546003909252909120541161271257604051638ea9835b60e01b815260040160405180910390fd5b600081815260116020908152604080832033845290915281208054916127378361551b565b9190505550600042338b8b6040516020016127559493929190615745565b60408051601f19818403018152918152815160209283012060008181526014909352912060028101899055600181018290556004810180546001600160a01b031916331790559091506005016127ac8a8c83615774565b506000818152601460205260408120600681018a905560078101829055600801819055805b60135481101561281a57601381815481106127ee576127ee615505565b90600052602060002001548403612808576001915061281a565b806128128161551b565b9150506127d1565b508061285657601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090018390555b50601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155505050505050505050565b60008051602061590d8339815191526128ae8133614505565b8382801580156128d157506128d160008051602061594d83398151915283612eb6565b156128ef5760405163bf6368b960e01b815260040160405180910390fd5b808015612911575061290f60008051602061594d83398151915283612eb6565b155b1561292f57604051635cb2b5e560e11b815260040160405180910390fd5b60006018603c806129607f0000000000000000000000000000000000000000000000000000000000000000426154f2565b61296a9190615574565b6129749190615574565b61297e9190615574565b60015460045491925060009161299690600a90615574565b6129a09190615574565b9050600081116129b15760016129b3565b805b33600090815260076020908152604080832086845290915290205490915081116129f0576040516340b21b6d60e11b815260040160405180910390fd5b6001600160a01b0388166000908152600860205260409020548890889088908214801590612a1c575080155b15612a3a576040516309ea00b960e01b815260040160405180910390fd5b60006018603c80612a6b7f0000000000000000000000000000000000000000000000000000000000000000426154f2565b612a759190615574565b612a7f9190615574565b612a899190615574565b3360009081526007602090815260408083208484529091528120805492935090612ab28361551b565b919050555089612b3157612ad460008051602061594d8339815191528d614739565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038e16908117909155600090815260086020526040812055612c08565b612b4960008051602061594d8339815191528d612eb6565b15612b6657612b6660008051602061594d8339815191528d6146c5565b6001600160a01b038c1660009081526008602052604081208190555b600454811015612c06578c6001600160a01b031660048281548110612ba957612ba9615505565b6000918252602090912001546001600160a01b031603612bf45760048181548110612bd657612bd6615505565b600091825260209091200180546001600160a01b0319169055612c06565b80612bfe8161551b565b915050612b82565b505b505050505050505050505050565b600060008051602061594d833981519152612c318133614505565b600160005b8651811015612cbb57848181518110612c5157612c51615505565b602002602001015180519060200120866001898481518110612c7557612c75615505565b6020026020010151612c8791906154f2565b81518110612c9757612c97615505565b602002602001015114612ca957600091505b80612cb38161551b565b915050612c36565b5095945050505050565b60008051602061594d833981519152612cde8133614505565b6000838152601460205260409020600601548390421080612d1e57506000818152601460205260409020600601544290612d1c906212750090615534565b105b15612d3c57604051630266984960e61b815260040160405180910390fd5b600084815260146020526040902054849060ff16612d6d57604051633f2151bd60e21b815260040160405180910390fd5b3360009081526018602090815260408083208884529091529020548590610100900460ff16612daf57604051630e139ddb60e01b815260040160405180910390fd5b336000908152601860209081526040808320898452909152902054869060ff1615612ded5760405163a61a461160e01b815260040160405180910390fd5b6000612df98833613782565b90508615612e2d5760008881526014602052604081206007018054839290612e22908490615534565b90915550612e549050565b60008881526014602052604081206008018054839290612e4e908490615534565b90915550505b6000888152601460205260408120600301805491612e718361551b565b90915550503360009081526018602090815260408083209a835299905297909720805460ff1916600117905550505050505050565b60138181548110610eeb57600080fd5b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6015602090815260009283526040808420909152908252902080546001820154600283018054929360ff808416946101008504909116936201000090046001600160a01b03169290612f3290615588565b80601f0160208091040260200160405190810160405280929190818152602001828054612f5e90615588565b8015612fab5780601f10612f8057610100808354040283529160200191612fab565b820191906000526020600020905b815481529060010190602001808311612f8e57829003601f168201915b5050506003840154600485018054949560ff909216949193509150612fcf90615588565b80601f0160208091040260200160405190810160405280929190818152602001828054612ffb90615588565b80156130485780601f1061301d57610100808354040283529160200191613048565b820191906000526020600020905b81548152906001019060200180831161302b57829003601f168201915b50505050509080600501805461305d90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461308990615588565b80156130d65780601f106130ab576101008083540402835291602001916130d6565b820191906000526020600020905b8154815290600101906020018083116130b957829003601f168201915b5050505050908060060180546130eb90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461311790615588565b80156131645780601f1061313957610100808354040283529160200191613164565b820191906000526020600020905b81548152906001019060200180831161314757829003601f168201915b5050505050905089565b6040805160208082019092526000905281519101207fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701490565b60008051602061594d8339815191526131c18133614505565b606060008660010361326c576131d78633611617565b600087815260106020908152604091829020805483518184028101840190945280845293955061323e9386939283018282801561323357602002820191906000526020600020905b81548152602001906001019080831161321f575b505050505086612c16565b3360009081526018602090815260408083208a84529091529020805461ff00191661010017905590506133aa565b8660020361330d5761327f8686336140be565b6000868152600e602090815260409182902080548351818402810184019094528084529395506132e493869392830182828015613233576020028201919060005260206000209081548152602001906001019080831161321f57505050505086612c16565b3360009081526019602090815260408220805460018101825590835291200186905590506133aa565b866003036133aa5761332086863361130e565b6000868152600f6020908152604091829020805483518184028101840190945280845293955061338593869392830182828015613233576020028201919060005260206000209081548152602001906001019080831161321f57505050505086612c16565b336000908152601a602090815260408220805460018101825590835291200186905590505b806113055760405162461bcd60e51b815260206004820152602760248201527f536f6d65206f6620796f75722070726f766964656420616e7377657273206172604482015266652077726f6e6760c81b60648201526084015b60405180910390fd5b600f60205281600052604060002081815481106117a257600080fd5b600e60205281600052604060002081815481106117a257600080fd5b60168181548110610eeb57600080fd5b60008051602061590d83398151915261346d8133614505565b60008381526014602052604090206004015483906001600160a01b03166134a757604051636afad3d960e01b815260040160405180910390fd5b6000848152601460205260409020600901611943848261561d565b60008051602061590d8339815191526134db8133614505565b816000805b336000908152600560205260409020548110156135555733600090815260056020526040902080546001600160a01b03851691908390811061352457613524615505565b6000918252602090912001546001600160a01b03160361354357600191505b8061354d8161551b565b9150506134e0565b508015613575576040516301624e0d60e21b815260040160405180910390fd5b33600090815260056020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b0389169081179091558352600690915281208054916135c78361551b565b9091555050600154158061361657506135e26032600a615547565b6001546001600160a01b03861660009081526006602052604090205461360a906103e8615547565b6136149190615574565b115b1561377c576001600160a01b038416600090815260066020526040812080549161363f8361551b565b919050555060005b600154811015613718576001600160a01b0385166000908152600560205260409020600180548390811061367d5761367d615505565b600091825260208083209091015483546001818101865594845291832090910180546001600160a01b0319166001600160a01b03909216919091179055815460069290849081106136d0576136d0615505565b60009182526020808320909101546001600160a01b0316835282019290925260400181208054916137008361551b565b919050555080806137109061551b565b915050613647565b5061373160008051602061590d83398151915285614739565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b50505050565b6001600160a01b03811660009081526019602052604081205460059082808080805b85811015613af75760008a81526015602090815260408083206001600160a01b038d168452601990925282208054839190859081106137e5576137e5615505565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b0316606082015260028201805491929160808401919061386290615588565b80601f016020809104026020016040519081016040528092919081815260200182805461388e90615588565b80156138db5780601f106138b0576101008083540402835291602001916138db565b820191906000526020600020905b8154815290600101906020018083116138be57829003601f168201915b5050509183525050600382015460ff161515602082015260048201805460409092019161390790615588565b80601f016020809104026020016040519081016040528092919081815260200182805461393390615588565b80156139805780601f1061395557610100808354040283529160200191613980565b820191906000526020600020905b81548152906001019060200180831161396357829003601f168201915b5050505050815260200160058201805461399990615588565b80601f01602080910402602001604051908101604052809291908181526020018280546139c590615588565b8015613a125780601f106139e757610100808354040283529160200191613a12565b820191906000526020600020905b8154815290600101906020018083116139f557829003601f168201915b50505050508152602001600682018054613a2b90615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613a5790615588565b8015613aa45780601f10613a7957610100808354040283529160200191613aa4565b820191906000526020600020905b815481529060010190602001808311613a8757829003601f168201915b50505050508152505090508a816000015103613ae4578060a0015115613ad657613acf600187615534565b9550613ae4565b613ae1600186615534565b94505b5080613aef8161551b565b9150506137a4565b506001600160a01b0388166000908152601a6020526040812054905b81811015613e665760008b81526015602090815260408083206001600160a01b038e168452601a9092528220805483919085908110613b5457613b54615505565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613bd190615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613bfd90615588565b8015613c4a5780601f10613c1f57610100808354040283529160200191613c4a565b820191906000526020600020905b815481529060010190602001808311613c2d57829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613c7690615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613ca290615588565b8015613cef5780601f10613cc457610100808354040283529160200191613cef565b820191906000526020600020905b815481529060010190602001808311613cd257829003601f168201915b50505050508152602001600582018054613d0890615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613d3490615588565b8015613d815780601f10613d5657610100808354040283529160200191613d81565b820191906000526020600020905b815481529060010190602001808311613d6457829003601f168201915b50505050508152602001600682018054613d9a90615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613dc690615588565b8015613e135780601f10613de857610100808354040283529160200191613e13565b820191906000526020600020905b815481529060010190602001808311613df657829003601f168201915b50505050508152505090508b816000015103613e53578060a0015115613e4557613e3e600186615534565b9450613e53565b613e50600185615534565b93505b5080613e5e8161551b565b915050613b13565b50600084861115613e8257613e7b85876154f2565b9050613e8f565b613e8c86866154f2565b90505b613e9a816005615547565b600282613ea7888a615534565b613eb191906154f2565b613ebb9190615574565b613ec6906019615547565b613ed09190615534565b613eda9089615534565b9750600083851115613ef757613ef084866154f2565b9050613f04565b613f0185856154f2565b90505b613f0f816002615547565b600282613f1c8789615534565b613f2691906154f2565b613f309190615574565b613f3b90600a615547565b613f459190615534565b613f4f908a615534565b9c9b505050505050505050505050565b60056020528160005260406000208181548110613f7b57600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008051602061592d833981519152613fb08133614505565b8133613fbb82611e09565b60a001516001600160a01b031614613fe657604051635e5c61fb60e01b815260040160405180910390fd5b82613ff2816001611135565b61400f57604051630a48771960e21b815260040160405180910390fd5b60003361401b86611e09565b60600151604051600081818185875af1925050503d806000811461405b576040519150601f19603f3d011682016040523d82523d6000602084013e614060565b606091505b505090508061406e57600080fd5b50505060009182525060146020526040812060020155565b600061177d8284612eb6565b601b8181548110610ea157600080fd5b601960205281600052604060002081815481106117a257600080fd5b60008381526015602090815260408083208584529091529020600501805460609161148d916140ec90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461411890615588565b80156141655780601f1061413a57610100808354040283529160200191614165565b820191906000526020600020905b81548152906001019060200180831161414857829003601f168201915b50505060008881526015602090815260408083208a8452909152902060020180549092506141939150615588565b80601f01602080910402602001604051908101604052809291908181526020018280546141bf90615588565b801561420c5780601f106141e15761010080835404028352916020019161420c565b820191906000526020600020905b8154815290600101906020018083116141ef57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600e90925290912054909250905060058761455a565b60008051602061592d8339815191526142568133614505565b33600090815260036020908152604080832054601283528184208885529092529091205485911161429a57604051631e3fcdc960e31b815260040160405180910390fd5b60004233866040516020016142b19392919061582d565b60408051601f1981840301815282825280516020918201206101208401835289845260008483018181528585018281523360608801908152608088018d81528c151560a08a01528751808801895285815260c08a01528751808801895285815260e08a015287518088018952858152610100808b01919091528f86526015885288862087875290975296909320875181559151600183018054925194516001600160a01b0316620100000262010000600160b01b031995151590970261ff00199215159290921661ffff1990931692909217179290921693909317905591519193509060028201906143a3908261561d565b5060a082015160038201805460ff191691151591909117905560c082015160048201906143d0908261561d565b5060e082015160058201906143e5908261561d565b5061010082015160068201906143fb908261561d565b505060178054600181019091557fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15018290555033600090815260126020908152604080832089845290915281208054916144548361551b565b9190505550505050505050565b60008051602061590d83398151915261447a8133614505565b60008381526014602052604090206009018054849161449c91611b5790615588565b156144ba5760405163121415cf60e01b815260040160405180910390fd5b82600a815110156144de57604051639f14e9bf60e01b815260040160405180910390fd5b600085815260106020908152604090912085516144fd92870190614b68565b505050505050565b60008281526009602090815260408083206001600160a01b038516845290915290205460ff166124b75760405163043c588360e11b81526001600160a01b038216600482015260248101839052604401613403565b6060600087878460405160200161457393929190615866565b60408051601f1981840301815291905280516020909101209050846000856001600160401b038111156145a8576145a8614c6e565b6040519080825280602002602001820160405280156145d1578160200160208202803683370190505b5090506000806145e1848b6158ac565b90505b878210156146b55760008486836020811061460157614601615505565b61460d9291901a6158ac565b614618906001615534565b905060005b8185828151811061463057614630615505565b60200260200101510361466057816146478161551b565b925050600090508582111561465b57600191505b61466e565b8061466a8161551b565b9150505b83811061461d578185858151811061468857614688615505565b60209081029190910101528361469d8161551b565b945050505080806146ad9061551b565b9150506145e4565b50909a9950505050505050505050565b6146cf8282614505565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19169055517ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9061472d908490849033906158c0565b60405180910390a15050565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19166001179055517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9061472d908490849033906158c0565b60005b6001600160a01b038316600090815260056020526040902054811015614afe576001600160a01b038381166000908152600560205260409020805491841691839081106147ec576147ec615505565b6000918252602090912001546001600160a01b031603614aec576001600160a01b038316600090815260056020526040902080548290811061483057614830615505565b6000918252602080832090910180546001600160a01b03191690556001600160a01b0384168252600690526040812080549161486b836158df565b9091555061487d90506032600a615547565b6001546001600160a01b0384166000908152600660205260409020546148a5906103e8615547565b6148af9190615574565b1015614aec576001600160a01b03821660009081526006602052604081208054916148d9836158df565b91905055506148f660008051602061590d833981519152836146c5565b60005b600154811015614a2957826001600160a01b03166001828154811061492057614920615505565b6000918252602090912001546001600160a01b031603614a17576001818154811061494d5761494d615505565b600091825260209091200180546001600160a01b0319169055600180546149759082906154f2565b8154811061498557614985615505565b600091825260209091200154600180546001600160a01b0390921691839081106149b1576149b1615505565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806149f0576149f06158f6565b600082815260209020810160001990810180546001600160a01b0319169055019055614a29565b80614a218161551b565b9150506148f9565b5060005b6001600160a01b03831660009081526005602052604090205481101561377c576001600160a01b03831660009081526005602052604090208054614a9791859184908110614a7d57614a7d615505565b6000918252602090912001546001600160a01b031661479a565b6001600160a01b0383166000908152600560205260409020805482908110614ac157614ac1615505565b600091825260209091200180546001600160a01b031916905580614ae48161551b565b915050614a2d565b80614af68161551b565b91505061479d565b505050565b828054828255906000526020600020908101928215614b58579160200282015b82811115614b5857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614b23565b50614b64929150614ba3565b5090565b828054828255906000526020600020908101928215614b58579160200282015b82811115614b58578251825591602001919060010190614b88565b5b80821115614b645760008155600101614ba4565b600060208284031215614bca57600080fd5b5035919050565b80356001600160a01b0381168114614be857600080fd5b919050565b60008060408385031215614c0057600080fd5b614c0983614bd1565b946020939093013593505050565b600060208284031215614c2957600080fd5b61177d82614bd1565b80358015158114614be857600080fd5b60008060408385031215614c5557600080fd5b82359150614c6560208401614c32565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614cac57614cac614c6e565b604052919050565b600082601f830112614cc557600080fd5b81356001600160401b03811115614cde57614cde614c6e565b614cf1601f8201601f1916602001614c84565b818152846020838601011115614d0657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215614d3957600080fd5b843593506020850135925060408501356001600160401b03811115614d5d57600080fd5b614d6987828801614cb4565b925050614d7860608601614c32565b905092959194509250565b600080600060608486031215614d9857600080fd5b8335925060208401359150614daf60408501614bd1565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015614df057835183529284019291840191600101614dd4565b50909695505050505050565b60005b83811015614e17578181015183820152602001614dff565b50506000910152565b60008151808452614e38816020860160208601614dfc565b601f01601f19169290920160200192915050565b60006101608d151583528c151560208401528b60408401528a606084015289608084015260018060a01b03891660a08401528060c0840152614e9081840189614e20565b90508660e08401528561010084015284610120840152828103610140840152614eb98185614e20565b9e9d5050505050505050505050505050565b60008060408385031215614ede57600080fd5b82359150614c6560208401614bd1565b60008060408385031215614f0157600080fd5b50508035926020909101359150565b600080600060608486031215614f2557600080fd5b833592506020840135915060408401356001600160401b03811115614f4957600080fd5b614f5586828701614cb4565b9150509250925092565b60006001600160401b03821115614f7857614f78614c6e565b5060051b60200190565b600082601f830112614f9357600080fd5b81356020614fa8614fa383614f5f565b614c84565b82815260059290921b84018101918181019086841115614fc757600080fd5b8286015b84811015614fe25780358352918301918301614fcb565b509695505050505050565b60008060006060848603121561500257600080fd5b833592506020840135915060408401356001600160401b0381111561502657600080fd5b614f5586828701614f82565b6020815261504560208201835115159052565b6000602083015161505a604084018215159052565b506040830151606083015260608301516080830152608083015160a083015260a083015161509360c08401826001600160a01b03169052565b5060c08301516101608060e08501526150b0610180850183614e20565b60e0860151610100868101919091528601516101208087019190915286015161014080870191909152860151858203601f1901838701529092506150f48382614e20565b9695505050505050565b6000806000806060858703121561511457600080fd5b84356001600160401b038082111561512b57600080fd5b818701915087601f83011261513f57600080fd5b81358181111561514e57600080fd5b88602082850101111561516057600080fd5b6020928301999098509187013596604001359550909350505050565b60008060006060848603121561519157600080fd5b61519a84614bd1565b925060208401359150614daf60408501614c32565b600082601f8301126151c057600080fd5b813560206151d0614fa383614f5f565b82815260059290921b840181019181810190868411156151ef57600080fd5b8286015b84811015614fe25780356001600160401b038111156152125760008081fd5b6152208986838b0101614cb4565b8452509183019183016151f3565b60008060006060848603121561524357600080fd5b83356001600160401b038082111561525a57600080fd5b818601915086601f83011261526e57600080fd5b8135602061527e614fa383614f5f565b82815260059290921b8401810191818101908a84111561529d57600080fd5b948201945b838610156152bb578535825294820194908201906152a2565b975050870135925050808211156152d157600080fd5b6152dd87838801614f82565b935060408601359150808211156152f357600080fd5b50614f55868287016151af565b898152881515602082015287151560408201526001600160a01b03871660608201526101206080820181905260009061533b83820189614e20565b905086151560a084015282810360c08401526153578187614e20565b905082810360e084015261536b8186614e20565b9050828103610100840152613f4f8185614e20565b60006020828403121561539257600080fd5b81356001600160401b038111156153a857600080fd5b61148d84828501614cb4565b600080600080608085870312156153ca57600080fd5b84359350602085013592506040850135915060608501356001600160401b038111156153f557600080fd5b615401878288016151af565b91505092959194509250565b6000806040838503121561542057600080fd5b8235915060208301356001600160401b0381111561543d57600080fd5b61544985828601614cb4565b9150509250929050565b60008060006060848603121561546857600080fd5b8335925060208401356001600160401b0381111561548557600080fd5b61549186828701614cb4565b925050614daf60408501614c32565b600080604083850312156154b357600080fd5b8235915060208301356001600160401b038111156154d057600080fd5b61544985828601614f82565b634e487b7160e01b600052601160045260246000fd5b81810381811115611780576117806154dc565b634e487b7160e01b600052603260045260246000fd5b60006001820161552d5761552d6154dc565b5060010190565b80820180821115611780576117806154dc565b8082028115828204841417611780576117806154dc565b634e487b7160e01b600052601260045260246000fd5b6000826155835761558361555e565b500490565b600181811c9082168061559c57607f821691505b6020821081036155bc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115614afe57600081815260208120601f850160051c810160208610156155e95750805b601f850160051c820191505b818110156144fd578281556001016155f5565b600019600383901b1c191660019190911b1790565b81516001600160401b0381111561563657615636614c6e565b61564a816156448454615588565b846155c2565b602080601f83116001811461567957600084156156675750858301515b6156718582615608565b8655506144fd565b600085815260208120601f198616915b828110156156a857888601518255948401946001909101908401615689565b50858210156156c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff8083168181036156ef576156ef6154dc565b6001019392505050565b63ffffffff828116828216039080821115615716576157166154dc565b5092915050565b63ffffffff81811683821602808216919082811461573d5761573d6154dc565b505092915050565b848152606084901b6001600160601b031916602082015281836034830137600091016034019081529392505050565b6001600160401b0383111561578b5761578b614c6e565b61579f836157998354615588565b836155c2565b6000601f8411600181146157cd57600085156157bb5750838201355b6157c58682615608565b845550611943565b600083815260209020601f19861690835b828110156157fe57868501358255602094850194600190920191016157de565b508682101561581b5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b83815260018060601b03198360601b16602082015260008251615857816034850160208701614dfc565b91909101603401949350505050565b60008451615878818460208901614dfc565b84519083019061588c818360208901614dfc565b60609490941b6001600160601b0319169301928352505060140192915050565b6000826158bb576158bb61555e565b500690565b9283526001600160a01b03918216602084015216604082015260600190565b6000816158ee576158ee6154dc565b506000190190565b634e487b7160e01b600052603160045260246000fdfeb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b46619f70d138cbbd87297896478196b4493d9dceaca01f5883ecbd7bee66d300348d313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9a2646970667358221220dcd91a7202a8e8b7b130db0e545974fcb88f4d17903793fcd9e35602eef0048664736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106103df5760003560e01c806305b34410146103eb57806309a34f001461043257806309d39b791461046a57806314bfd6d01461048a57806314e00b6d146104aa57806314e55bd0146104bf57806319a8fb1c146104d457806319d3cfd4146104f45780631db5ade8146105095780631db6d106146105645780631f0317b41461059a578063206f0af4146105b057806323559c57146105e8578063257de397146106305780632bad9a92146106525780632c23da78146106725780632d3f3e88146106875780632e5371e8146106b75780632f2deba3146106cc5780632f3ddb8f146106ec578063300637ce146107015780633224caf91461072e5780633378f39e146107655780633550644d1461078557806337e3f71c146107a55780633ad4ecee146107c55780633d61f033146107d85780633ea29d75146107f85780633f691cb314610825578063407135f114610845578063424ae2b71461084d5780634337b8451461086d578063445cb2df1461088d578063466dff58146104bf57806349900c0f146108ba5780634c3cc1bc146108cf5780634cb401a614610907578063509779d61461091e578063532da8e31461093e5780635657d7cc146109605780635675d8981461098057806359fe7279146109a05780635a0c7d4b146106b75780635d3d05f3146109c257806367fadfd9146109e257806369d2a73314610a045780636c5140bd14610a24578063713257c414610a44578063727b81a314610a645780637b7c5d5714610a7a5780637d7c591b14610ab25780638043e65914610ad25780638ce3885114610ae957806391d1485414610b0957806395f808c014610b295780639aa2d819146106b75780639c5a985014610b3f578063a1f8316514610b56578063a438d20814610b8b578063a45f379e14610ba2578063a880aa31146106b7578063a9914e9914610bc2578063ae12f8ab14610bd7578063afbfea7f14610bf7578063b0f8b42a14610c24578063b128744c14610c44578063b1a03aed14610c64578063bbc3912814610c84578063bcc36be714610c99578063c06b62ea14610cb9578063c202583814610cd9578063c84d221414610cf9578063c8c99cc314610d0f578063cab1eee414610d2f578063cad1043b14610ad2578063cfaf234a14610d44578063cff7b24214610d59578063d77a603c14610d79578063d9b1962214610d99578063e3ab974614610dae578063e64ae4bd14610dc4578063eb0ce58914610de4578063f10e098414610e04578063f4388c6b146104bf578063f8785b4f146104bf578063fbd7082714610e24578063fda490d914610e44578063fe3fd17514610e6457600080fd5b366103e657005b600080fd5b3480156103f757600080fd5b5061041f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561043e57600080fd5b5061045261044d366004614bb8565b610e91565b6040516001600160a01b039091168152602001610429565b34801561047657600080fd5b50610452610485366004614bb8565b610ebb565b34801561049657600080fd5b506104526104a5366004614bb8565b610ecb565b3480156104b657600080fd5b50601e5461041f565b3480156104cb57600080fd5b5061041f600581565b3480156104e057600080fd5b5061041f6104ef366004614bb8565b610edb565b34801561050057600080fd5b5060045461041f565b34801561051557600080fd5b5061054d610524366004614bed565b601860209081526000928352604080842090915290825290205460ff8082169161010090041682565b604080519215158352901515602083015201610429565b34801561057057600080fd5b5061045261057f366004614c17565b601d602052600090815260409020546001600160a01b031681565b3480156105a657600080fd5b5061041f600c5481565b3480156105bc57600080fd5b5061041f6105cb366004614bed565b600760209081526000928352604080842090915290825290205481565b3480156105f457600080fd5b5061061b610603366004614c17565b601c6020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610429565b34801561063c57600080fd5b5061065061064b366004614bb8565b610efc565b005b34801561065e57600080fd5b5061065061066d366004614bb8565b610f1b565b34801561067e57600080fd5b5060175461041f565b34801561069357600080fd5b506106a76106a2366004614c42565b611135565b6040519015158152602001610429565b3480156106c357600080fd5b5061041f600a81565b3480156106d857600080fd5b506106506106e7366004614d23565b611245565b3480156106f857600080fd5b5060135461041f565b34801561070d57600080fd5b5061072161071c366004614d83565b61130e565b6040516104299190614db8565b34801561073a57600080fd5b5061074e610749366004614bb8565b611495565b6040516104299b9a99989796959493929190614e4c565b34801561077157600080fd5b50610452610780366004614bb8565b611607565b34801561079157600080fd5b506107216107a0366004614ecb565b611617565b3480156107b157600080fd5b5061041f6107c0366004614eee565b611786565b6106506107d3366004614bb8565b6117b7565b3480156107e457600080fd5b506106506107f3366004614eee565b6117ec565b34801561080457600080fd5b5061041f610813366004614c17565b60066020526000908152604090205481565b34801561083157600080fd5b50610650610840366004614f10565b61194a565b610650611a10565b34801561085957600080fd5b50610650610868366004614fed565b611b0e565b34801561087957600080fd5b50610650610888366004614c17565b611c5a565b34801561089957600080fd5b506108ad6108a8366004614bb8565b611e09565b6040516104299190615032565b3480156108c657600080fd5b50610650612030565b3480156108db57600080fd5b5061041f6108ea366004614bed565b601260209081526000928352604080842090915290825290205481565b34801561091357600080fd5b5061041f620d2f0081565b34801561092a57600080fd5b5061041f610939366004614bed565b6122c7565b34801561094a57600080fd5b5061041f60008051602061592d83398151915281565b34801561096c57600080fd5b5061065061097b366004614fed565b6122e3565b34801561098c57600080fd5b5061065061099b366004614c17565b612494565b3480156109ac57600080fd5b5061041f60008051602061590d83398151915281565b3480156109ce57600080fd5b506106506109dd366004614bb8565b6124bb565b3480156109ee57600080fd5b5061041f60008051602061594d83398151915281565b348015610a1057600080fd5b50610650610a1f3660046150fe565b6125c5565b348015610a3057600080fd5b50610650610a3f36600461517c565b612895565b348015610a5057600080fd5b506106a7610a5f36600461522e565b612c16565b348015610a7057600080fd5b5061041f60005481565b348015610a8657600080fd5b5061041f610a95366004614ecb565b601160209081526000928352604080842090915290825290205481565b348015610abe57600080fd5b50610650610acd366004614c42565b612cc5565b348015610ade57600080fd5b5061041f62278d0081565b348015610af557600080fd5b5061041f610b04366004614bb8565b612ea6565b348015610b1557600080fd5b506106a7610b24366004614ecb565b612eb6565b348015610b3557600080fd5b5061041f600b5481565b348015610b4b57600080fd5b5061041f6203f48081565b348015610b6257600080fd5b50610b76610b71366004614eee565b612ee1565b60405161042999989796959493929190615300565b348015610b9757600080fd5b5061041f6212750081565b348015610bae57600080fd5b506106a7610bbd366004615380565b61316e565b348015610bce57600080fd5b50601b5461041f565b348015610be357600080fd5b50610650610bf23660046153b4565b6131a8565b348015610c0357600080fd5b5061041f610c12366004614c17565b60086020526000908152604090205481565b348015610c3057600080fd5b5061041f610c3f366004614eee565b61340c565b348015610c5057600080fd5b5061041f610c5f366004614eee565b613428565b348015610c7057600080fd5b5061041f610c7f366004614bb8565b613444565b348015610c9057600080fd5b5060025461041f565b348015610ca557600080fd5b50610650610cb436600461540d565b613454565b348015610cc557600080fd5b50610650610cd4366004614c17565b6134c2565b348015610ce557600080fd5b5061041f610cf4366004614ecb565b613782565b348015610d0557600080fd5b5061041f600d5481565b348015610d1b57600080fd5b50610452610d2a366004614bed565b613f5f565b348015610d3b57600080fd5b5060165461041f565b348015610d5057600080fd5b5061041f603281565b348015610d6557600080fd5b50610650610d74366004614bb8565b613f97565b348015610d8557600080fd5b506106a7610d94366004614bed565b614086565b348015610da557600080fd5b5060015461041f565b348015610dba57600080fd5b5061041f600a5481565b348015610dd057600080fd5b50610452610ddf366004614bb8565b614092565b348015610df057600080fd5b5061041f610dff366004614bed565b6140a2565b348015610e1057600080fd5b50610721610e1f366004614d83565b6140be565b348015610e3057600080fd5b50610650610e3f366004615453565b61423d565b348015610e5057600080fd5b50610650610e5f3660046154a0565b614461565b348015610e7057600080fd5b5061041f610e7f366004614c17565b60036020526000908152604090205481565b60048181548110610ea157600080fd5b6000918252602090912001546001600160a01b0316905081565b60028181548110610ea157600080fd5b60018181548110610ea157600080fd5b60178181548110610eeb57600080fd5b600091825260209091200154905081565b60008051602061590d833981519152610f158133614505565b50600055565b60008051602061590d833981519152610f348133614505565b6000828152601460205260409020600601548290421115610f68576040516301da8d1f60e51b815260040160405180910390fd5b60008381526014602052604090206006015483904290610f8c906203f480906154f2565b1115610fab57604051639aaaf57560e01b815260040160405180910390fd5b60008481526010602090815260409182902080548351818402810184019094528084529091830182828015610fff57602002820191906000526020600020905b815481526020019060010190808311610feb575b5050505050600a8151101561102757604051639f14e9bf60e01b815260040160405180910390fd5b601754859060019060005b818110156110f4576000848152601560205260408120601780549192918490811061105f5761105f615505565b6000918252602080832090910154835282019290925260400190206001015460ff16156110e257600084815260156020526040812060178054919291849081106110ab576110ab615505565b9060005260206000200154815260200190815260200160002060010160019054906101000a900460ff166110e257600092506110f4565b806110ec8161551b565b915050611032565b508161111357604051630632790560e51b815260040160405180910390fd5b505050600094855250506014602052505060409020805460ff19166001179055565b60008281526014602052604081206006015483904290611159906212750090615534565b1115611178576040516368cd2a8560e01b815260040160405180910390fd5b600084815260146020526040902054849060ff166111a957604051633f2151bd60e21b815260040160405180910390fd5b6004546000868152601460205260409020600301548691600a916111ce906064615547565b6111d89190615574565b10156111f7576040516333722a1360e21b815260040160405180910390fd5b841561121f57600086815260146020526040902060088101546007909101541015935061123c565b600086815260146020526040902060078101546008909101541193505b50505092915050565b60008051602061590d83398151915261125e8133614505565b6000858152601560209081526040808320878452909152902060010154859085906201000090046001600160a01b03166112ab57604051636fdc2add60e11b815260040160405180910390fd5b83156112dd57600087815260156020908152604080832089845290915290206005016112d7868261561d565b50611305565b60008781526015602090815260408083208984529091529020600601611303868261561d565b505b50505050505050565b60008381526015602090815260408083208584529091529020600601805460609161148d9161133c90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461136890615588565b80156113b55780601f1061138a576101008083540402835291602001916113b5565b820191906000526020600020905b81548152906001019060200180831161139857829003601f168201915b50505060008881526015602090815260408083208a8452909152902060040180549092506113e39150615588565b80601f016020809104026020016040519081016040528092919081815260200182805461140f90615588565b801561145c5780601f106114315761010080835404028352916020019161145c565b820191906000526020600020905b81548152906001019060200180831161143f57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600f90925290912054909250905060058761455a565b949350505050565b60146020526000908152604090208054600182015460028301546003840154600485015460058601805460ff8088169861010090980416966001600160a01b039093169291906114e490615588565b80601f016020809104026020016040519081016040528092919081815260200182805461151090615588565b801561155d5780601f106115325761010080835404028352916020019161155d565b820191906000526020600020905b81548152906001019060200180831161154057829003601f168201915b50505050509080600601549080600701549080600801549080600901805461158490615588565b80601f01602080910402602001604051908101604052809291908181526020018280546115b090615588565b80156115fd5780601f106115d2576101008083540402835291602001916115fd565b820191906000526020600020905b8154815290600101906020018083116115e057829003601f168201915b505050505090508b565b601e8181548110610ea157600080fd5b6000828152601460205260409020600901805460609161177d9161163a90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461166690615588565b80156116b35780601f10611688576101008083540402835291602001916116b3565b820191906000526020600020905b81548152906001019060200180831161169657829003601f168201915b505050600087815260146020526040902060050180549092506116d69150615588565b80601f016020809104026020016040519081016040528092919081815260200182805461170290615588565b801561174f5780601f106117245761010080835404028352916020019161174f565b820191906000526020600020905b81548152906001019060200180831161173257829003601f168201915b505050600088815260146020908152604080832060060154601090925290912054909250905060058761455a565b90505b92915050565b601060205281600052604060002081815481106117a257600080fd5b90600052602060002001600091509150505481565b6000543410156117da5760405163529c3ec360e11b815260040160405180910390fd5b33600090815260086020526040902055565b60008051602061590d8339815191526118058133614505565b600c5415611826576040516306f17dd960e01b815260040160405180910390fd5b8261183462278d0042615534565b81101561185457604051635311b60360e01b815260040160405180910390fd5b600c849055600d83905560005b600254811015611925576118aa60008051602061592d8339815191526002838154811061189057611890615505565b6000918252602090912001546001600160a01b03166146c5565b60036000600283815481106118c1576118c1615505565b60009182526020808320909101546001600160a01b0316835282019290925260400181205560028054829081106118fa576118fa615505565b600091825260209091200180546001600160a01b03191690558061191d8161551b565b915050611861565b50604080516000815260208101918290525161194391600291614b03565b5050505050565b60008051602061592d8339815191526119638133614505565b6000848152601460205260409020600601548490421115611997576040516301da8d1f60e51b815260040160405180910390fd5b600085815260156020908152604080832087845282528083205483526014909152902060040154859085906001600160a01b031633146119ea57604051634f2161f960e01b815260040160405180910390fd5b60008781526015602090815260408083208984529091529020600401611303868261561d565b60008051602061594d833981519152611a298133614505565b600b54341015611a4c5760405163529c3ec360e11b815260040160405180910390fd5b600c541580611a5c575042600c54105b15611a7a57604051630bd094bd60e21b815260040160405180910390fd5b336000908152601c602052604090205463ffffffff1615611aae57604051634cc9446360e11b815260040160405180910390fd5b50601b805460018181019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b031916339081179091556000908152601c60205260409020805463ffffffff19169091179055565b60008051602061590d833981519152611b278133614505565b60008481526015602090815260408083208684529091529020600501805485918591611bda9190611b5790615588565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8390615588565b8015611bd05780601f10611ba557610100808354040283529160200191611bd0565b820191906000526020600020905b815481529060010190602001808311611bb357829003601f168201915b505050505061316e565b15611bf85760405163e88eb9cf60e01b815260040160405180910390fd5b83600a81511015611c1c57604051639f14e9bf60e01b815260040160405180910390fd5b600087815260156020908152604080832089845282528083206001908101805460ff19169091179055600e8252909120865161130392880190614b68565b60008051602061594d833981519152611c738133614505565b81600c54421080611c845750600c54155b15611ca25760405163071620af60e01b815260040160405180910390fd5b600d54421115611cc557604051630cf0edd160e01b815260040160405180910390fd5b6001600160a01b0381163303611ced5760405162b5d96560e51b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604081205463ffffffff169003611d2b576040516311bb144160e01b815260040160405180910390fd5b336000908152601d60205260409020546001600160a01b031615611d625760405163b9ef1a7560e01b815260040160405180910390fd5b336000818152601d6020908152604080832080546001600160a01b0389166001600160a01b03199182168117909255601e8054600181019091557f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350018054909116909517909455928252601c9052908120805463ffffffff1691611de5836156d6565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505050565b611e7660405180610160016040528060001515815260200160001515815260200160008019168152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081525090565b600082815260146020908152604091829020825161016081018452815460ff8082161515835261010090910416151592810192909252600181015492820192909252600282015460608201526003820154608082015260048201546001600160a01b031660a082015260058201805491929160c084019190611ef790615588565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2390615588565b8015611f705780601f10611f4557610100808354040283529160200191611f70565b820191906000526020600020905b815481529060010190602001808311611f5357829003601f168201915b50505050508152602001600682015481526020016007820154815260200160088201548152602001600982018054611fa790615588565b80601f0160208091040260200160405190810160405280929190818152602001828054611fd390615588565b80156120205780601f10611ff557610100808354040283529160200191612020565b820191906000526020600020905b81548152906001019060200180831161200357829003601f168201915b5050505050815250509050919050565b60008051602061590d8339815191526120498133614505565b600c5460000361206c5760405163530c5b4f60e11b815260040160405180910390fd5b42600d5462093a8061207e9190615534565b111561209d57604051631967d9a160e11b815260040160405180910390fd5b601e5460005b601b54811015612281576000826001601c6000601b86815481106120c9576120c9615505565b60009182526020808320909101546001600160a01b031683528201929092526040019020546120fe919063ffffffff166156f9565b61210a906103e861571d565b63ffffffff1661211a9190615574565b9050600a8111156122285760006064612134600a80615547565b61213e90846154f2565b6121489190615574565b612153906001615534565b905061219460008051602061592d833981519152601b858154811061217a5761217a615505565b6000918252602090912001546001600160a01b0316614739565b6002601b84815481106121a9576121a9615505565b6000918252602080832090910154835460018101855593835290822090920180546001600160a01b0319166001600160a01b0390931692909217909155601b8054839260039290918790811061220157612201615505565b60009182526020808320909101546001600160a01b03168352820192909252604001902055505b601c6000601b848154811061223f5761223f615505565b60009182526020808320909101546001600160a01b031683528201929092526040019020805463ffffffff1916905550806122798161551b565b9150506120a3565b50604080516000815260208101918290525161229f91601b91614b03565b5060408051600081526020810191829052516122bd91601e91614b03565b50506000600c5550565b601a60205281600052604060002081815481106117a257600080fd5b60008051602061590d8339815191526122fc8133614505565b6000848152601560209081526040808320868452909152902060010154849084906201000090046001600160a01b031661234957604051636fdc2add60e11b815260040160405180910390fd5b600086815260156020908152604080832088845290915290206004018054879187916123799190611b5790615588565b156123975760405163279a7c4360e11b815260040160405180910390fd5b60008881526015602090815260408083208a845290915290206006018054899189916123c79190611b5790615588565b156123e5576040516323120adf60e21b815260040160405180910390fd5b60008a8152601460205260409020600601548a90421115612419576040516301da8d1f60e51b815260040160405180910390fd5b88600a8151101561243d57604051639f14e9bf60e01b815260040160405180910390fd5b60008b8152600f602090815260409091208b5161245c928d0190614b68565b5050506000998a525050601560209081526040808a20988a5297905250505092909320600101805461ff001916610100179055505050565b60008051602061590d8339815191526124ad8133614505565b6124b7338361479a565b5050565b60008051602061590d8339815191526124d48133614505565b81428110156124f6576040516321ff628560e11b815260040160405180910390fd5b60005b60135481101561259f5760005b60025481101561258c57601160006013848154811061252757612527615505565b9060005260206000200154815260200190815260200160002060006002838154811061255557612555615505565b60009182526020808320909101546001600160a01b03168352820192909252604001812055806125848161551b565b915050612506565b50806125978161551b565b9150506124f9565b5060408051600081526020810191829052516125bd91601391614b68565b505050600a55565b60008051602061592d8339815191526125de8133614505565b42600a5411806125ee5750600a54155b1561260c576040516359c6f10760e11b815260040160405180910390fd5b8261261a620d2f0042615534565b81101561263a5760405163f401736760e01b815260040160405180910390fd5b8361264862278d0042615534565b81111561266857604051630e8eaa6b60e31b815260040160405180910390fd5b6000600a544261267891906154f2565b9050600061268962278d0083615574565b905061269b620d2f0062278d006154f2565b6126a862278d0083615547565b6126b290846154f2565b11156126d1576040516317a0acc960e31b815260040160405180910390fd5b60008181526011602090815260408083203384528252808320546003909252909120541161271257604051638ea9835b60e01b815260040160405180910390fd5b600081815260116020908152604080832033845290915281208054916127378361551b565b9190505550600042338b8b6040516020016127559493929190615745565b60408051601f19818403018152918152815160209283012060008181526014909352912060028101899055600181018290556004810180546001600160a01b031916331790559091506005016127ac8a8c83615774565b506000818152601460205260408120600681018a905560078101829055600801819055805b60135481101561281a57601381815481106127ee576127ee615505565b90600052602060002001548403612808576001915061281a565b806128128161551b565b9150506127d1565b508061285657601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090018390555b50601680546001810182556000919091527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890155505050505050505050565b60008051602061590d8339815191526128ae8133614505565b8382801580156128d157506128d160008051602061594d83398151915283612eb6565b156128ef5760405163bf6368b960e01b815260040160405180910390fd5b808015612911575061290f60008051602061594d83398151915283612eb6565b155b1561292f57604051635cb2b5e560e11b815260040160405180910390fd5b60006018603c806129607f0000000000000000000000000000000000000000000000000000000000000000426154f2565b61296a9190615574565b6129749190615574565b61297e9190615574565b60015460045491925060009161299690600a90615574565b6129a09190615574565b9050600081116129b15760016129b3565b805b33600090815260076020908152604080832086845290915290205490915081116129f0576040516340b21b6d60e11b815260040160405180910390fd5b6001600160a01b0388166000908152600860205260409020548890889088908214801590612a1c575080155b15612a3a576040516309ea00b960e01b815260040160405180910390fd5b60006018603c80612a6b7f0000000000000000000000000000000000000000000000000000000000000000426154f2565b612a759190615574565b612a7f9190615574565b612a899190615574565b3360009081526007602090815260408083208484529091528120805492935090612ab28361551b565b919050555089612b3157612ad460008051602061594d8339815191528d614739565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038e16908117909155600090815260086020526040812055612c08565b612b4960008051602061594d8339815191528d612eb6565b15612b6657612b6660008051602061594d8339815191528d6146c5565b6001600160a01b038c1660009081526008602052604081208190555b600454811015612c06578c6001600160a01b031660048281548110612ba957612ba9615505565b6000918252602090912001546001600160a01b031603612bf45760048181548110612bd657612bd6615505565b600091825260209091200180546001600160a01b0319169055612c06565b80612bfe8161551b565b915050612b82565b505b505050505050505050505050565b600060008051602061594d833981519152612c318133614505565b600160005b8651811015612cbb57848181518110612c5157612c51615505565b602002602001015180519060200120866001898481518110612c7557612c75615505565b6020026020010151612c8791906154f2565b81518110612c9757612c97615505565b602002602001015114612ca957600091505b80612cb38161551b565b915050612c36565b5095945050505050565b60008051602061594d833981519152612cde8133614505565b6000838152601460205260409020600601548390421080612d1e57506000818152601460205260409020600601544290612d1c906212750090615534565b105b15612d3c57604051630266984960e61b815260040160405180910390fd5b600084815260146020526040902054849060ff16612d6d57604051633f2151bd60e21b815260040160405180910390fd5b3360009081526018602090815260408083208884529091529020548590610100900460ff16612daf57604051630e139ddb60e01b815260040160405180910390fd5b336000908152601860209081526040808320898452909152902054869060ff1615612ded5760405163a61a461160e01b815260040160405180910390fd5b6000612df98833613782565b90508615612e2d5760008881526014602052604081206007018054839290612e22908490615534565b90915550612e549050565b60008881526014602052604081206008018054839290612e4e908490615534565b90915550505b6000888152601460205260408120600301805491612e718361551b565b90915550503360009081526018602090815260408083209a835299905297909720805460ff1916600117905550505050505050565b60138181548110610eeb57600080fd5b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6015602090815260009283526040808420909152908252902080546001820154600283018054929360ff808416946101008504909116936201000090046001600160a01b03169290612f3290615588565b80601f0160208091040260200160405190810160405280929190818152602001828054612f5e90615588565b8015612fab5780601f10612f8057610100808354040283529160200191612fab565b820191906000526020600020905b815481529060010190602001808311612f8e57829003601f168201915b5050506003840154600485018054949560ff909216949193509150612fcf90615588565b80601f0160208091040260200160405190810160405280929190818152602001828054612ffb90615588565b80156130485780601f1061301d57610100808354040283529160200191613048565b820191906000526020600020905b81548152906001019060200180831161302b57829003601f168201915b50505050509080600501805461305d90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461308990615588565b80156130d65780601f106130ab576101008083540402835291602001916130d6565b820191906000526020600020905b8154815290600101906020018083116130b957829003601f168201915b5050505050908060060180546130eb90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461311790615588565b80156131645780601f1061313957610100808354040283529160200191613164565b820191906000526020600020905b81548152906001019060200180831161314757829003601f168201915b5050505050905089565b6040805160208082019092526000905281519101207fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4701490565b60008051602061594d8339815191526131c18133614505565b606060008660010361326c576131d78633611617565b600087815260106020908152604091829020805483518184028101840190945280845293955061323e9386939283018282801561323357602002820191906000526020600020905b81548152602001906001019080831161321f575b505050505086612c16565b3360009081526018602090815260408083208a84529091529020805461ff00191661010017905590506133aa565b8660020361330d5761327f8686336140be565b6000868152600e602090815260409182902080548351818402810184019094528084529395506132e493869392830182828015613233576020028201919060005260206000209081548152602001906001019080831161321f57505050505086612c16565b3360009081526019602090815260408220805460018101825590835291200186905590506133aa565b866003036133aa5761332086863361130e565b6000868152600f6020908152604091829020805483518184028101840190945280845293955061338593869392830182828015613233576020028201919060005260206000209081548152602001906001019080831161321f57505050505086612c16565b336000908152601a602090815260408220805460018101825590835291200186905590505b806113055760405162461bcd60e51b815260206004820152602760248201527f536f6d65206f6620796f75722070726f766964656420616e7377657273206172604482015266652077726f6e6760c81b60648201526084015b60405180910390fd5b600f60205281600052604060002081815481106117a257600080fd5b600e60205281600052604060002081815481106117a257600080fd5b60168181548110610eeb57600080fd5b60008051602061590d83398151915261346d8133614505565b60008381526014602052604090206004015483906001600160a01b03166134a757604051636afad3d960e01b815260040160405180910390fd5b6000848152601460205260409020600901611943848261561d565b60008051602061590d8339815191526134db8133614505565b816000805b336000908152600560205260409020548110156135555733600090815260056020526040902080546001600160a01b03851691908390811061352457613524615505565b6000918252602090912001546001600160a01b03160361354357600191505b8061354d8161551b565b9150506134e0565b508015613575576040516301624e0d60e21b815260040160405180910390fd5b33600090815260056020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b0389169081179091558352600690915281208054916135c78361551b565b9091555050600154158061361657506135e26032600a615547565b6001546001600160a01b03861660009081526006602052604090205461360a906103e8615547565b6136149190615574565b115b1561377c576001600160a01b038416600090815260066020526040812080549161363f8361551b565b919050555060005b600154811015613718576001600160a01b0385166000908152600560205260409020600180548390811061367d5761367d615505565b600091825260208083209091015483546001818101865594845291832090910180546001600160a01b0319166001600160a01b03909216919091179055815460069290849081106136d0576136d0615505565b60009182526020808320909101546001600160a01b0316835282019290925260400181208054916137008361551b565b919050555080806137109061551b565b915050613647565b5061373160008051602061590d83398151915285614739565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0386161790555b50505050565b6001600160a01b03811660009081526019602052604081205460059082808080805b85811015613af75760008a81526015602090815260408083206001600160a01b038d168452601990925282208054839190859081106137e5576137e5615505565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b0316606082015260028201805491929160808401919061386290615588565b80601f016020809104026020016040519081016040528092919081815260200182805461388e90615588565b80156138db5780601f106138b0576101008083540402835291602001916138db565b820191906000526020600020905b8154815290600101906020018083116138be57829003601f168201915b5050509183525050600382015460ff161515602082015260048201805460409092019161390790615588565b80601f016020809104026020016040519081016040528092919081815260200182805461393390615588565b80156139805780601f1061395557610100808354040283529160200191613980565b820191906000526020600020905b81548152906001019060200180831161396357829003601f168201915b5050505050815260200160058201805461399990615588565b80601f01602080910402602001604051908101604052809291908181526020018280546139c590615588565b8015613a125780601f106139e757610100808354040283529160200191613a12565b820191906000526020600020905b8154815290600101906020018083116139f557829003601f168201915b50505050508152602001600682018054613a2b90615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613a5790615588565b8015613aa45780601f10613a7957610100808354040283529160200191613aa4565b820191906000526020600020905b815481529060010190602001808311613a8757829003601f168201915b50505050508152505090508a816000015103613ae4578060a0015115613ad657613acf600187615534565b9550613ae4565b613ae1600186615534565b94505b5080613aef8161551b565b9150506137a4565b506001600160a01b0388166000908152601a6020526040812054905b81811015613e665760008b81526015602090815260408083206001600160a01b038e168452601a9092528220805483919085908110613b5457613b54615505565b6000918252602080832091909101548352828101939093526040918201902081516101208101835281548152600182015460ff8082161515958301959095526101008104909416151592810192909252620100009092046001600160a01b03166060820152600282018054919291608084019190613bd190615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613bfd90615588565b8015613c4a5780601f10613c1f57610100808354040283529160200191613c4a565b820191906000526020600020905b815481529060010190602001808311613c2d57829003601f168201915b5050509183525050600382015460ff1615156020820152600482018054604090920191613c7690615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613ca290615588565b8015613cef5780601f10613cc457610100808354040283529160200191613cef565b820191906000526020600020905b815481529060010190602001808311613cd257829003601f168201915b50505050508152602001600582018054613d0890615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613d3490615588565b8015613d815780601f10613d5657610100808354040283529160200191613d81565b820191906000526020600020905b815481529060010190602001808311613d6457829003601f168201915b50505050508152602001600682018054613d9a90615588565b80601f0160208091040260200160405190810160405280929190818152602001828054613dc690615588565b8015613e135780601f10613de857610100808354040283529160200191613e13565b820191906000526020600020905b815481529060010190602001808311613df657829003601f168201915b50505050508152505090508b816000015103613e53578060a0015115613e4557613e3e600186615534565b9450613e53565b613e50600185615534565b93505b5080613e5e8161551b565b915050613b13565b50600084861115613e8257613e7b85876154f2565b9050613e8f565b613e8c86866154f2565b90505b613e9a816005615547565b600282613ea7888a615534565b613eb191906154f2565b613ebb9190615574565b613ec6906019615547565b613ed09190615534565b613eda9089615534565b9750600083851115613ef757613ef084866154f2565b9050613f04565b613f0185856154f2565b90505b613f0f816002615547565b600282613f1c8789615534565b613f2691906154f2565b613f309190615574565b613f3b90600a615547565b613f459190615534565b613f4f908a615534565b9c9b505050505050505050505050565b60056020528160005260406000208181548110613f7b57600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008051602061592d833981519152613fb08133614505565b8133613fbb82611e09565b60a001516001600160a01b031614613fe657604051635e5c61fb60e01b815260040160405180910390fd5b82613ff2816001611135565b61400f57604051630a48771960e21b815260040160405180910390fd5b60003361401b86611e09565b60600151604051600081818185875af1925050503d806000811461405b576040519150601f19603f3d011682016040523d82523d6000602084013e614060565b606091505b505090508061406e57600080fd5b50505060009182525060146020526040812060020155565b600061177d8284612eb6565b601b8181548110610ea157600080fd5b601960205281600052604060002081815481106117a257600080fd5b60008381526015602090815260408083208584529091529020600501805460609161148d916140ec90615588565b80601f016020809104026020016040519081016040528092919081815260200182805461411890615588565b80156141655780601f1061413a57610100808354040283529160200191614165565b820191906000526020600020905b81548152906001019060200180831161414857829003601f168201915b50505060008881526015602090815260408083208a8452909152902060020180549092506141939150615588565b80601f01602080910402602001604051908101604052809291908181526020018280546141bf90615588565b801561420c5780601f106141e15761010080835404028352916020019161420c565b820191906000526020600020905b8154815290600101906020018083116141ef57829003601f168201915b5050506000898152601460209081526040808320600601548b8452600e90925290912054909250905060058761455a565b60008051602061592d8339815191526142568133614505565b33600090815260036020908152604080832054601283528184208885529092529091205485911161429a57604051631e3fcdc960e31b815260040160405180910390fd5b60004233866040516020016142b19392919061582d565b60408051601f1981840301815282825280516020918201206101208401835289845260008483018181528585018281523360608801908152608088018d81528c151560a08a01528751808801895285815260c08a01528751808801895285815260e08a015287518088018952858152610100808b01919091528f86526015885288862087875290975296909320875181559151600183018054925194516001600160a01b0316620100000262010000600160b01b031995151590970261ff00199215159290921661ffff1990931692909217179290921693909317905591519193509060028201906143a3908261561d565b5060a082015160038201805460ff191691151591909117905560c082015160048201906143d0908261561d565b5060e082015160058201906143e5908261561d565b5061010082015160068201906143fb908261561d565b505060178054600181019091557fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15018290555033600090815260126020908152604080832089845290915281208054916144548361551b565b9190505550505050505050565b60008051602061590d83398151915261447a8133614505565b60008381526014602052604090206009018054849161449c91611b5790615588565b156144ba5760405163121415cf60e01b815260040160405180910390fd5b82600a815110156144de57604051639f14e9bf60e01b815260040160405180910390fd5b600085815260106020908152604090912085516144fd92870190614b68565b505050505050565b60008281526009602090815260408083206001600160a01b038516845290915290205460ff166124b75760405163043c588360e11b81526001600160a01b038216600482015260248101839052604401613403565b6060600087878460405160200161457393929190615866565b60408051601f1981840301815291905280516020909101209050846000856001600160401b038111156145a8576145a8614c6e565b6040519080825280602002602001820160405280156145d1578160200160208202803683370190505b5090506000806145e1848b6158ac565b90505b878210156146b55760008486836020811061460157614601615505565b61460d9291901a6158ac565b614618906001615534565b905060005b8185828151811061463057614630615505565b60200260200101510361466057816146478161551b565b925050600090508582111561465b57600191505b61466e565b8061466a8161551b565b9150505b83811061461d578185858151811061468857614688615505565b60209081029190910101528361469d8161551b565b945050505080806146ad9061551b565b9150506145e4565b50909a9950505050505050505050565b6146cf8282614505565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19169055517ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9061472d908490849033906158c0565b60405180910390a15050565b60008281526009602090815260408083206001600160a01b038516845290915290819020805460ff19166001179055517f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9061472d908490849033906158c0565b60005b6001600160a01b038316600090815260056020526040902054811015614afe576001600160a01b038381166000908152600560205260409020805491841691839081106147ec576147ec615505565b6000918252602090912001546001600160a01b031603614aec576001600160a01b038316600090815260056020526040902080548290811061483057614830615505565b6000918252602080832090910180546001600160a01b03191690556001600160a01b0384168252600690526040812080549161486b836158df565b9091555061487d90506032600a615547565b6001546001600160a01b0384166000908152600660205260409020546148a5906103e8615547565b6148af9190615574565b1015614aec576001600160a01b03821660009081526006602052604081208054916148d9836158df565b91905055506148f660008051602061590d833981519152836146c5565b60005b600154811015614a2957826001600160a01b03166001828154811061492057614920615505565b6000918252602090912001546001600160a01b031603614a17576001818154811061494d5761494d615505565b600091825260209091200180546001600160a01b0319169055600180546149759082906154f2565b8154811061498557614985615505565b600091825260209091200154600180546001600160a01b0390921691839081106149b1576149b1615505565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806149f0576149f06158f6565b600082815260209020810160001990810180546001600160a01b0319169055019055614a29565b80614a218161551b565b9150506148f9565b5060005b6001600160a01b03831660009081526005602052604090205481101561377c576001600160a01b03831660009081526005602052604090208054614a9791859184908110614a7d57614a7d615505565b6000918252602090912001546001600160a01b031661479a565b6001600160a01b0383166000908152600560205260409020805482908110614ac157614ac1615505565b600091825260209091200180546001600160a01b031916905580614ae48161551b565b915050614a2d565b80614af68161551b565b91505061479d565b505050565b828054828255906000526020600020908101928215614b58579160200282015b82811115614b5857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614b23565b50614b64929150614ba3565b5090565b828054828255906000526020600020908101928215614b58579160200282015b82811115614b58578251825591602001919060010190614b88565b5b80821115614b645760008155600101614ba4565b600060208284031215614bca57600080fd5b5035919050565b80356001600160a01b0381168114614be857600080fd5b919050565b60008060408385031215614c0057600080fd5b614c0983614bd1565b946020939093013593505050565b600060208284031215614c2957600080fd5b61177d82614bd1565b80358015158114614be857600080fd5b60008060408385031215614c5557600080fd5b82359150614c6560208401614c32565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614cac57614cac614c6e565b604052919050565b600082601f830112614cc557600080fd5b81356001600160401b03811115614cde57614cde614c6e565b614cf1601f8201601f1916602001614c84565b818152846020838601011115614d0657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215614d3957600080fd5b843593506020850135925060408501356001600160401b03811115614d5d57600080fd5b614d6987828801614cb4565b925050614d7860608601614c32565b905092959194509250565b600080600060608486031215614d9857600080fd5b8335925060208401359150614daf60408501614bd1565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015614df057835183529284019291840191600101614dd4565b50909695505050505050565b60005b83811015614e17578181015183820152602001614dff565b50506000910152565b60008151808452614e38816020860160208601614dfc565b601f01601f19169290920160200192915050565b60006101608d151583528c151560208401528b60408401528a606084015289608084015260018060a01b03891660a08401528060c0840152614e9081840189614e20565b90508660e08401528561010084015284610120840152828103610140840152614eb98185614e20565b9e9d5050505050505050505050505050565b60008060408385031215614ede57600080fd5b82359150614c6560208401614bd1565b60008060408385031215614f0157600080fd5b50508035926020909101359150565b600080600060608486031215614f2557600080fd5b833592506020840135915060408401356001600160401b03811115614f4957600080fd5b614f5586828701614cb4565b9150509250925092565b60006001600160401b03821115614f7857614f78614c6e565b5060051b60200190565b600082601f830112614f9357600080fd5b81356020614fa8614fa383614f5f565b614c84565b82815260059290921b84018101918181019086841115614fc757600080fd5b8286015b84811015614fe25780358352918301918301614fcb565b509695505050505050565b60008060006060848603121561500257600080fd5b833592506020840135915060408401356001600160401b0381111561502657600080fd5b614f5586828701614f82565b6020815261504560208201835115159052565b6000602083015161505a604084018215159052565b506040830151606083015260608301516080830152608083015160a083015260a083015161509360c08401826001600160a01b03169052565b5060c08301516101608060e08501526150b0610180850183614e20565b60e0860151610100868101919091528601516101208087019190915286015161014080870191909152860151858203601f1901838701529092506150f48382614e20565b9695505050505050565b6000806000806060858703121561511457600080fd5b84356001600160401b038082111561512b57600080fd5b818701915087601f83011261513f57600080fd5b81358181111561514e57600080fd5b88602082850101111561516057600080fd5b6020928301999098509187013596604001359550909350505050565b60008060006060848603121561519157600080fd5b61519a84614bd1565b925060208401359150614daf60408501614c32565b600082601f8301126151c057600080fd5b813560206151d0614fa383614f5f565b82815260059290921b840181019181810190868411156151ef57600080fd5b8286015b84811015614fe25780356001600160401b038111156152125760008081fd5b6152208986838b0101614cb4565b8452509183019183016151f3565b60008060006060848603121561524357600080fd5b83356001600160401b038082111561525a57600080fd5b818601915086601f83011261526e57600080fd5b8135602061527e614fa383614f5f565b82815260059290921b8401810191818101908a84111561529d57600080fd5b948201945b838610156152bb578535825294820194908201906152a2565b975050870135925050808211156152d157600080fd5b6152dd87838801614f82565b935060408601359150808211156152f357600080fd5b50614f55868287016151af565b898152881515602082015287151560408201526001600160a01b03871660608201526101206080820181905260009061533b83820189614e20565b905086151560a084015282810360c08401526153578187614e20565b905082810360e084015261536b8186614e20565b9050828103610100840152613f4f8185614e20565b60006020828403121561539257600080fd5b81356001600160401b038111156153a857600080fd5b61148d84828501614cb4565b600080600080608085870312156153ca57600080fd5b84359350602085013592506040850135915060608501356001600160401b038111156153f557600080fd5b615401878288016151af565b91505092959194509250565b6000806040838503121561542057600080fd5b8235915060208301356001600160401b0381111561543d57600080fd5b61544985828601614cb4565b9150509250929050565b60008060006060848603121561546857600080fd5b8335925060208401356001600160401b0381111561548557600080fd5b61549186828701614cb4565b925050614daf60408501614c32565b600080604083850312156154b357600080fd5b8235915060208301356001600160401b038111156154d057600080fd5b61544985828601614f82565b634e487b7160e01b600052601160045260246000fd5b81810381811115611780576117806154dc565b634e487b7160e01b600052603260045260246000fd5b60006001820161552d5761552d6154dc565b5060010190565b80820180821115611780576117806154dc565b8082028115828204841417611780576117806154dc565b634e487b7160e01b600052601260045260246000fd5b6000826155835761558361555e565b500490565b600181811c9082168061559c57607f821691505b6020821081036155bc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115614afe57600081815260208120601f850160051c810160208610156155e95750805b601f850160051c820191505b818110156144fd578281556001016155f5565b600019600383901b1c191660019190911b1790565b81516001600160401b0381111561563657615636614c6e565b61564a816156448454615588565b846155c2565b602080601f83116001811461567957600084156156675750858301515b6156718582615608565b8655506144fd565b600085815260208120601f198616915b828110156156a857888601518255948401946001909101908401615689565b50858210156156c65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600063ffffffff8083168181036156ef576156ef6154dc565b6001019392505050565b63ffffffff828116828216039080821115615716576157166154dc565b5092915050565b63ffffffff81811683821602808216919082811461573d5761573d6154dc565b505092915050565b848152606084901b6001600160601b031916602082015281836034830137600091016034019081529392505050565b6001600160401b0383111561578b5761578b614c6e565b61579f836157998354615588565b836155c2565b6000601f8411600181146157cd57600085156157bb5750838201355b6157c58682615608565b845550611943565b600083815260209020601f19861690835b828110156157fe57868501358255602094850194600190920191016157de565b508682101561581b5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b83815260018060601b03198360601b16602082015260008251615857816034850160208701614dfc565b91909101603401949350505050565b60008451615878818460208901614dfc565b84519083019061588c818360208901614dfc565b60609490941b6001600160601b0319169301928352505060140192915050565b6000826158bb576158bb61555e565b500690565b9283526001600160a01b03918216602084015216604082015260600190565b6000816158ee576158ee6154dc565b506000190190565b634e487b7160e01b600052603160045260246000fdfeb346b2ddc13f08bd9685b83a95304a79a2caac0aa7aa64129e1ae9f4361b46619f70d138cbbd87297896478196b4493d9dceaca01f5883ecbd7bee66d300348d313691be6e710b5e9c97c695d02c9e24926f986402f826152f3b2970694f72c9a2646970667358221220dcd91a7202a8e8b7b130db0e545974fcb88f4d17903793fcd9e35602eef0048664736f6c63430008130033",
  "devdoc": {
    "author": "Márton Sándor Horváth, email: hmartonsandor{@}gmail.com",
    "kind": "dev",
    "methods": {},
    "title": "Balanced Voting System: Voting contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "@dev",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizenRoleApplicationFee",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "admins",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 32,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "politicalActors",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 36,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "politicalActorVotingCredits",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 39,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizens",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 46,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "adminApprovalSentToAccount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 50,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "adminRoleGrantApprovals",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 56,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "dailyCitizenRoleModifyCredit",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 60,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "citizenshipApplications",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 66,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "_hasRole",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 896,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "firstVotingCycleStartDate",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 899,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsCandidateApplicationFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 901,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsStartDate",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 903,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionsEndDate",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 955,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleContentReadCheckAnswers",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 960,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleContentResponseReadCheckAnswers",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 965,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingContentReadCheckAnswers",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 971,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingCycleStartVoteCount",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 977,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "publishArticleToVotingsCount",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))"
      },
      {
        "astId": 980,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingCycleIndexes",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 985,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votings",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_bytes32,t_struct(Voting)945_storage)"
      },
      {
        "astId": 992,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "proConArticles",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_struct(ProConArticle)922_storage))"
      },
      {
        "astId": 995,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votingKeys",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 998,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articleKeys",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 1005,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "votes",
        "offset": 0,
        "slot": "24",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Vote)950_storage))"
      },
      {
        "astId": 1010,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articlesCompleted",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1015,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "articlesResponseCompleted",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 1018,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionCandidates",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1022,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionCandidateScores",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 1026,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionVotes",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1029,
        "contract": "contracts/BVS_Voting.sol:BVS_Voting",
        "label": "electionVoters",
        "offset": 0,
        "slot": "30",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Vote)950_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => struct BVS_Voting.Vote))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Vote)950_storage)"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_address,t_uint32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes32,t_struct(ProConArticle)922_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes32 => struct BVS_Voting.ProConArticle))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(ProConArticle)922_storage)"
      },
      "t_mapping(t_bytes32,t_struct(ProConArticle)922_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.ProConArticle)",
        "numberOfBytes": "32",
        "value": "t_struct(ProConArticle)922_storage"
      },
      "t_mapping(t_bytes32,t_struct(Vote)950_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.Vote)",
        "numberOfBytes": "32",
        "value": "t_struct(Vote)950_storage"
      },
      "t_mapping(t_bytes32,t_struct(Voting)945_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BVS_Voting.Voting)",
        "numberOfBytes": "32",
        "value": "t_struct(Voting)945_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ProConArticle)922_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.ProConArticle",
        "members": [
          {
            "astId": 905,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "votingKey",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 907,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isArticleApproved",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 909,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isResponseApproved",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 911,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "publisher",
            "offset": 2,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 913,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "articleIpfsHash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 915,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isVoteOnA",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 917,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "responseStatementIpfsHash",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 919,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "articleContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 921,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "responseContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Vote)950_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.Vote",
        "members": [
          {
            "astId": 947,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 949,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "isContentCompleted",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Voting)945_storage": {
        "encoding": "inplace",
        "label": "struct BVS_Voting.Voting",
        "members": [
          {
            "astId": 924,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "approved",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 926,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "cancelled",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 928,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "key",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 930,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "budget",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 932,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 934,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "creator",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 936,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "contentIpfsHash",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 938,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "startDate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 940,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteOnAScore",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 942,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "voteOnBScore",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 944,
            "contract": "contracts/BVS_Voting.sol:BVS_Voting",
            "label": "votingContentCheckQuizIpfsHash",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}
